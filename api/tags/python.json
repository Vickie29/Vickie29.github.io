{"name":"python","postlist":[{"title":"ValueError Dimension 0 in both shapes must be equal","slug":"ValueError：Dimension 0 in both shapes must be equal","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/50048.json","excerpt":"<p> 今天重新训练 yolo 的时候出现了这个报错 </p><blockquote><p>ValueError: Dimension 0 in both shapes must be equal, but are 1 and 21. Shapes are [1,1,1024,24] and [21,1024,1,1]. for ‘Assign_360’ (op: ‘Assign’) with input shapes: [1,1,1024,24], [21,1024,1,1].</p></blockquote><p> 一般情况就是 class 中的数量对不上 </p>","cover":"https://img-blog.csdnimg.cn/20200521170207875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":140,"url":"/posts/50048/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"ModuleNotFoundError：No module named “ckeditor”","slug":"ModuleNotFoundError：No module named “ckeditor”","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/29537.json","excerpt":"<p></p>","cover":"https://img-blog.csdnimg.cn/20200518195810898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":24,"url":"/posts/29537/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"Command “python setup.py egg_info” failed——完美解决","slug":"Command “python setup.py egg_info” failed——完美解决","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/2659.json","excerpt":"<p>用 ubuntu 安装 <code>django-mdeditor==0.1.13</code> 时报错：</p><blockquote><p>Command “python setup.py egg_info” failed with error code 1 in /tmp/pip-build-2XpM94/django-mdeditor/</p></blockquote><p>有人说是 <code>setuptools</code> 的版本太低，于是我镜像源下更新了一下： <code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade setuptools</code></p><p></p>","cover":"https://img-blog.csdnimg.cn/20200518185849980.png","content":null,"min2read":"1","word4post":103,"url":"/posts/2659/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"},{"name":"ubuntu","path":"api/tags/ubuntu.json","url":"/tags/ubuntu/"}]},{"title":"运行 SSD-TensorFlow 报错：tensorflow.python.framework.errors_impl.NotFoundError：","slug":"运行SSD-TensorFlow报错：tensorflow.python.framework.errors_impl.NotFoundError：","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/15660.json","excerpt":"<p> 玩了很久的 yolo，今天下载了 SSD-TensorFlow 的代码，不过在运行的时候出现了一点问题 </p><p> 官方的介绍是运行：<code>jupyter notebook notebooks/ssd_notebook.ipynb</code></p><p> 但是在 <code>jupyter notebook</code> 中运行多有不便，我就将代码复制在了下面文件夹里，与 <code>ssd_notebook.ipynb</code> 放在了一块，可是出现报错：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tensorflow.python.framework.errors_impl.NotFoundError: FindFirstFile failed <span class=\"keyword\">for</span></span><br><span class=\"line\">…/checkpoints:ϵͳ\\udcd5Ҳ\\udcbb\\udcb5\\udcbdָ\\udcb6\\udca8\\udcb5\\udcc4·\\udcbe\\udcb6\\udca1\\udca3 </span><br><span class=\"line\">; No such process</span><br></pre></td></tr></table></figure>","cover":"https://img-blog.csdnimg.cn/20200506152235306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":444,"url":"/posts/15660/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"教女友学会 python+yolov3 调用笔记本摄像头——实时进行识别","slug":"教女友学会python+yolov3调用笔记本摄像头——实时进行识别","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/60092.json","excerpt":"<blockquote><p>我终于回来啦，快一个月没有正式写博客了 <br> 最近忙着把老师交给我的项目完成，又从老师经费里白嫖了好多好玩的硬件，网课都没咋听，今天介绍完这个小点，马上就要准备看模电了 <br> 其实我做项目时完全从 0 开始，所接触的东西也是零零散散的，我想表达的东西用面向新手的方式写出来，之后开始介绍软硬件结合的东西。<br>也可以加我的交流群，所有资料我会在群里分享出来哦：977947271<br>2020/5/30：<br>近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要 1 元钱，但是进群后我会将钱退还给大家，只是为了过滤一些不好的人。</p></blockquote><blockquote><p>环境：win10、py3.6、yolov3</p></blockquote>","cover":"https://img-blog.csdnimg.cn/20200504155521890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":3,"word4post":"1.1k","url":"/posts/60092/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"关于 yolo 配合硬件的小结——个人笔记","slug":"关于yolo配合硬件的小结——个人笔记","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/56562.json","excerpt":"<p>这个纯属个人笔记了——完全是怕忘 <br> 很久没有写博客，也不太知道想写什么，最近玩的东西比较多：esp8266 做 wifi 杀手、配合 esp32 搭建了个简易的网络摄像头，改 yolo 玩的一阵子，入手几个红外模块，现在正在玩 USART HMI。</p><p>今天用 yolo 和红外编码打开空调的时候，因为 yolo 是不停的循环调用摄像头识别人数的</p>","cover":"https://img-blog.csdnimg.cn/20200503114812548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":460,"url":"/posts/56562/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"python 实现人数识别目标识别","slug":"python实现人数识别目标识别","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/54324.json","excerpt":null,"cover":null,"content":null,"min2read":"1","word4post":21,"url":"/posts/54324/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"ERROR Cannot uninstall 'xxx'. It is a distutils installed project and thus we cannot accurately","slug":"ERROR：Cannot uninstall 'xxx'. It is a distutils installed project and thus we cannot accurately","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/14185.json","excerpt":"<p> 今天安装 <code>serial</code> 时报错：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR: Cannot uninstall <span class=\"string\">'PyYAML'</span>. It <span class=\"keyword\">is</span> a distutils installed project <span class=\"keyword\">and</span> thus we</span><br><span class=\"line\">       cannot accurately determine which files belong to it which would lead to </span><br><span class=\"line\">       only a partial uninstall .</span><br><span class=\"line\"> 错误：无法卸载“ PyYAML”。 这是一个 distutils 安装的项目，因此我们 </span><br><span class=\"line\">        无法准确确定哪些文件属于该文件，这将导致 </span><br><span class=\"line\">        仅部分卸载 </span><br></pre></td></tr></table></figure>","cover":null,"content":null,"min2read":"1","word4post":164,"url":"/posts/14185/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"pytorch 安装过程出现： No module named 'tools.nnwrap'——已解决","slug":"pytorch 安装过程出现： No module named 'tools.nnwrap'——已解决","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/19425.json","excerpt":"<blockquote><p> 环境：win10、py3.6</p></blockquote><p> 可以先参考下面这个博文：<br><a href=\"https://blog.csdn.net/qq_45504119/article/details/104905471\" target=\"_blank\" rel=\"noopener\"> 安装 torch 详细解决方法 </a></p><p> 这篇文章是我之前写的，后来重装系统，忘了没安装 torch，所以报错，里面文件下载和安装说的很详细。</p>","cover":"https://img-blog.csdnimg.cn/20200409110528138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":163,"url":"/posts/19425/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"cpu 运行 gpu 上的 pytorch 报错 AssertionErrortorch not compiled with cuda enabled——已解决","slug":"cpu运行gpu上的pytorch 报错：AssertionErrortorch not compiled with cuda enabled——已解决","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/54195.json","excerpt":"<p> 感觉今天介绍的这种方法可以解决所有这种报错出现的问题 </p><h2 id=\"事件发生：\"><a href=\"# 事件发生：\" class=\"headerlink\" title=\"事件发生：\"></a> 事件发生：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 报错：AssertionError:torch <span class=\"keyword\">not</span> compiled <span class=\"keyword\">with</span> cuda enabled</span><br></pre></td></tr></table></figure><p></p>","cover":"https://img-blog.csdnimg.cn/20200409104210488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":228,"url":"/posts/54195/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"python 绝对兼容的库配置——机器学习 & 爬虫","slug":"python绝对兼容的库配置——机器学习&爬虫","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/3611.json","excerpt":"<blockquote><p> <strong>Time: 2020/4/1   15:01</strong></p></blockquote><p> 更新一下我的 python 库的版本，以免以后我自己搞错了…</p><p> 相比上次机器学习的库，这次多了部分爬虫的库 </p>","cover":null,"content":null,"min2read":5,"word4post":852,"url":"/posts/3611/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"教女朋友学会用 win10+yolov3+python 训练自己的模型","slug":"教女朋友学会用win10+yolov3+python训练自己的模型","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/63366.json","excerpt":"<blockquote><p>times：2020/3/23<br>操作系统：win10<br>环境：python 3.6<br>因为我之前把所有内容写在一篇文章里非常的乱，所以本文主线是训练自己的 yolo.h5 去识别图像中的人，所有小细节的操作，我都在文中添加了链接，新手的话需要注意看一下。<br>// 有任何的问题都可以直接评论，还有资料的话直接留言邮箱，说明问题 //<br>// 也可以评论下加下微信询问 //<br>大家一起加油学习 yolo，之后我会再出一篇详细介绍 yolo 代码的文章 <br> 新创建的小小交流群：977947271 想要资料的也可以在群里要哦<br>2020/5/30：</p></blockquote><p>如果你是 yolo 小白，或者环境配置等一直报错，请先参阅上一篇博文：<a href=\"https://blog.csdn.net/qq_45504119/article/details/105033492\" target=\"_blank\" rel=\"noopener\">keras-yolov3 目标检测详解——适合新手</a> (环境配置、用官方权重识别自己的图片)</p>","cover":"https://img-blog.csdnimg.cn/20200323190223242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":11,"word4post":"2.5k","url":"/posts/63366/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"python 绝对兼容的库配置——机器学习","slug":"python绝对兼容的库配置——机器学习","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/37357.json","excerpt":"<p> 先给大家推荐一个：<a href=\"https://docs.floydhub.com/guides/environments/\" target=\"_blank\" rel=\"noopener\"> 深度学习环境兼容性配置 </a></p><p> 接下来记录一下我的 python 库的版本，以免以后我自己搞错了…</p>","cover":null,"content":null,"min2read":4,"word4post":723,"url":"/posts/37357/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"labelimg 使用方法：如何标注图片","slug":"labelimg使用方法：如何标注图片","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/50785.json","excerpt":"<p>labelimg 是一款专门用于贴标签的软件 </p><h2 id=\"如何下载 -labelimg：\"><a href=\"# 如何下载 -labelimg：\" class=\"headerlink\" title=\"如何下载 labelimg：\"></a> 如何下载 labelimg：</h2><p><strong>1、anaconda 中下载：</strong></p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple labelimg</span><br></pre></td></tr></table></figure><p> 因为我下载过了，所以显示：<code>Requirement already satisfied</code><br></p>","cover":"https://img-blog.csdnimg.cn/20200322230932469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":455,"url":"/posts/50785/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"教女友学会 keras-yolov3 目标检测详解——适合新手","slug":"教女友学会keras-yolov3目标检测详解——适合新手","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/12478.json","excerpt":"<blockquote><p> 现在网上能找到的博客我现在看起来很明白，虽然讲的很详细，但是对于几天前的我真的看不明白，因为新手会遇到各种各样毫无征兆的问题，所以我决定写一篇面向新手的如何去使用 yolo 和如何去做自己的数据集来训练属于自己的模型。因为我也是新手，所以不说原理，只谈操作方法。</p></blockquote><blockquote><p>2020/5/30：<br> 近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要 1 元钱，但是进群后我会将钱退还给大家，只是为了过滤一些不好的人。</p></blockquote><blockquote><p> 因为东西很杂，我会把小东西分出去写，并且在本文中附上链接。</p></blockquote>","cover":"https://img-blog.csdnimg.cn/20200322220715900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":5,"word4post":"1.4k","url":"/posts/12478/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"python 使用镜像安装库时提示 Warning——已解决","slug":"python 使用镜像安装库时提示 Warning——已解决","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/37819.json","excerpt":"<h2 id=\"事件起因：\"><a href=\"# 事件起因：\" class=\"headerlink\" title=\"事件起因：\"></a> 事件起因：</h2><p></p><p> 看这张图，使用清华镜像时提示 warning：<br><code>Warning: &#39;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/&#39; already in &#39;channels&#39; list, moving to the top</code></p>","cover":"https://img-blog.csdnimg.cn/20200318014810411.png","content":null,"min2read":"1","word4post":102,"url":"/posts/37819/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"module 'tensorflow' has no attribute 'get_default_graph'","slug":"module 'tensorflow' has no attribute 'get_default_graph'","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/23428.json","excerpt":"<p> 参考：<a href=\"https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</a></p><h2 id=\"事件经过：\"><a href=\"# 事件经过：\" class=\"headerlink\" title=\"事件经过：\"></a> 事件经过：</h2><p> 现在已经是凌晨一点半，从昨天下午开始在 windows 的 anaconda 配置 yolov3 的训练环境，一直出各种问题，很烦。</p><p> 两小时前遇到这个问题：<br><code>https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</code></p><p> 参照各种方法，tensorflow 和其他库删了再重新下载。</p>","cover":"https://img-blog.csdnimg.cn/20200317012850971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":378,"url":"/posts/23428/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"anaconda 安装 pytorch——详解","slug":"anaconda安装 pytorch——详解","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/43498.json","excerpt":"<h2 id=\"事件前言：\"><a href=\"# 事件前言：\" class=\"headerlink\" title=\"事件前言：\"></a> 事件前言：</h2><p> 今天凌晨 2 点多时清华镜像源还可以正常使用，但是刚刚我电脑却使用不了了 </p><blockquote><p> 使用中科大、阿里云等国内镜像的时候，一直报错：<br><code>Warning: &#39;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/&#39; already in &#39;channels&#39; list, moving to the top</code></p></blockquote><p> 无奈我只能自己下载了 </p><p><a href=\"https://download.pytorch.org/whl/torch_stable.html\" target=\"_blank\" rel=\"noopener\">pytorch 下载链接 </a> &lt;———点击这里进入网站 </p><p></p>","cover":"https://img-blog.csdnimg.cn/20200316185114665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":285,"url":"/posts/43498/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"运行 sh 文件报错：python3 command not found——已解决","slug":"运行sh文件报错：python3： command not found——已解决","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/26136.json","excerpt":"<p> 我使用 windows 下的 anaconda 运行 sh 文件时报错：<code>python3: command not found</code></p><p> 可是我就是在 anaconda 配置的 python3.6 环境下运行的 sh 文件啊 </p><p> 网上没有找的任何有效的解决方法 </p><p> 后来我打开 sh 文件看了下代码：<br>（把 sh 后缀改成 txt 后缀就可以打开文件）</p>","cover":"https://img-blog.csdnimg.cn/20200316145609226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":158,"url":"/posts/26136/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"anaconda 配置 yolov3 环境","slug":"anaconda 配置 yolov3 环境","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/30986.json","excerpt":"<h2 id=\"1、- 使用清华镜像创建环境\"><a href=\"#1、- 使用清华镜像创建环境\" class=\"headerlink\" title=\"1、 使用清华镜像创建环境\"></a>1、 使用清华镜像创建环境 </h2><p> 输入：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class=\"line\">conda config --set show_channel_urls yes</span><br><span class=\"line\">conda create -n yolo python=<span class=\"number\">3.6</span></span><br></pre></td></tr></table></figure><p>(忽略图中因为打错字母导致的报错…)</p><p></p>","cover":"https://img-blog.csdnimg.cn/20200316001002423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":257,"url":"/posts/30986/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"机器视觉","path":"api/categories/机器视觉.json","url":"/categories/python/机器视觉/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"机器视觉","path":"api/tags/机器视觉.json","url":"/tags/机器视觉/"}]},{"title":"No command 'conda creat'——解决方法","slug":"No command 'conda creat'——解决方法","date":"2020-06-17","updated":"2020-06-18","path":"api/posts/41404.json","excerpt":"<p> 在 anacond 中创建一个新的环境 python3.6：</p><blockquote><p> 输入:<br><code>conda create -n yolo python=3.6</code></p><p> 报错：<br><code>CommandNotFoundError: No command &#39;conda creat&#39;.Did you mean &#39;conda create&#39;?</code></p></blockquote><p></p>","cover":"https://img-blog.csdnimg.cn/20200315230215285.png","content":null,"min2read":"1","word4post":84,"url":"/posts/41404/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"Python 的 Scripts 文件夹为空——已解决","slug":"Python的Scripts文件夹为空——已解决","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/21501.json","excerpt":"<p> 如果有 windows 环境的 python 的话，很可能会出现 Scripts 文件夹为空，这样就无法正常在 cmd 正常使用 pip 命令。</p><p><strong> 解决方法：</strong></p><p> cmd 中输入： <code>python -m ensurepip</code></p><p></p>","cover":"https://img-blog.csdnimg.cn/20200313174634904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":63,"url":"/posts/21501/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"No module named 'pkg_resources' 解决方法","slug":"No module named 'pkg_resources'解决方法","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/57821.json","excerpt":null,"cover":"https://img-blog.csdnimg.cn/20200311193145656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":37,"url":"/posts/57821/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"Python 中 pip 的安装——windows 系统","slug":"Python中 pip 的安装——windows系统","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/6732.json","excerpt":"<p> 我的 Windows 环境下的 python 是没有 pip 文件的，所以想要实现 pip 命令就要手动安装 pip 文件 </p><p> 这篇和接下来的文章我会演示　windows 系统下的 “IDLE” 安装 pip 可能遇到的所有问题 </p><p><strong>pip 20.0.2 官方下载地址 </strong>：<a href=\"https://pypi.org/project/pip/#description\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/pip/#description</a></p><p></p>","cover":"https://img-blog.csdnimg.cn/2020031117175539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":2,"word4post":558,"url":"/posts/6732/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"教女朋友一周学会 python 爬虫_1","slug":"教女朋友一周学会 python 爬虫_1","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/24985.json","excerpt":"<p> 今天开始我将简单介绍一下网络爬虫，并开始带大家学习如何写爬虫 </p><p><strong> 一、爬虫介绍 </strong></p><p> <strong>1、什么是爬虫？</strong></p><p> 你可以把互联网想想成一个巨大的蜘蛛网，而爬虫就是一个小蜘蛛在网的各个节点中穿梭。   就像探测机器一样，基本操作就是模拟人去浏览各个网站，浏览数据，查看信息。</p>","cover":null,"content":null,"min2read":2,"word4post":674,"url":"/posts/24985/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"爬虫","path":"api/categories/爬虫.json","url":"/categories/python/爬虫/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"爬虫","path":"api/tags/爬虫.json","url":"/tags/爬虫/"}]},{"title":"Python 安装 chardet","slug":"Python安装 chardet","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/61970.json","excerpt":"<p>Chardet：通用字符编码检测器 </p><p>chardet 3.0.4 官网链接 <a href=\"https://pypi.org/project/chardet/#files\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/chardet/#files</a></p><p></p>","cover":"https://img-blog.csdnimg.cn/20200309201404769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":114,"url":"/posts/61970/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"error&库","path":"api/categories/error&库.json","url":"/categories/python/error-库/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"error&库","path":"api/tags/error&库.json","url":"/tags/error-库/"}]},{"title":"Python 学习笔记_9：class 类定义的属性与方法——详解","slug":"Python学习笔记_9：class 类定义的属性与方法——详解","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/25323.json","excerpt":"<p> 对很多没有其他语言基础的初学者来说，可能学到 python 的类定义的时候会苦恼很久 </p><p> 但，无论我们遇到什么困难，也不要怕，微笑着面对他，消除恐惧的最好办法就是面对恐惧，坚持，才是胜利，加油，奥利给！！！</p><p></p>","cover":"https://img-blog.csdnimg.cn/20200308134728646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":2,"word4post":544,"url":"/posts/25323/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 官方的中文文档","slug":"Python 官方的中文文档","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/43900.json","excerpt":"<p> 今天打开 Python documentation 查阅函数使用方法，像往常一样，我打开了百度翻译 </p><p> 突发奇想，要不上网找找有没有哪位大佬翻译好的中文文档，发现 python 官网上竟然发布了 python 的中文文档….(python 初学者表示之前真的不知道)</p><p>Python 官方文档链接：<a href=\"https://docs.python.org/zh-cn/3/\" target=\"_blank\" rel=\"noopener\">https://docs.python.org/zh-cn/3/</a></p>","cover":"https://img-blog.csdnimg.cn/20200307155243677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":160,"url":"/posts/43900/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"入门","path":"api/categories/入门.json","url":"/categories/python/入门/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"}]},{"title":"Python 学习笔记_8：set 函数的使用方法","slug":"Python学习笔记_8：set 函数的使用方法","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/56883.json","excerpt":"<p> 前面我们介绍了 python 的列表，元组，dict。</p><p>set 就是我们所说的集合 </p><p> 今天介绍一下 set 函数的基本用法:</p><p><strong>1、set 的使用方法 </strong></p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>I = set([<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(I)</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">%set 会自动将数字排序 </span><br></pre></td></tr></table></figure>","cover":null,"content":null,"min2read":1,"word4post":205,"url":"/posts/56883/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 学习笔记_7：index() 和 dict() 的用法详解","slug":"Python学习笔记_7：index() 和 dict() 的用法详解","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/32939.json","excerpt":"<p> 前面的笔记中我详细介绍了列表和元组 </p><p><strong> 当我们需要列表中某一元素的相应位置时 </strong></p><p> 就要提到 <strong>index()</strong> 这个神奇的函数了 </p><h2 id=\"混讲一下 -index- 和 -dict\"><a href=\"# 混讲一下 -index- 和 -dict\" class=\"headerlink\" title=\"混讲一下 index() 和 dict()\"></a> 混讲一下 index() 和 dict()</h2><p><strong>1、index() 的简单用法：</strong></p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>I = [<span class=\"string\">'东北大鹌鹑'</span>,<span class=\"string\">'周淑怡'</span>,<span class=\"string\">'刘某人'</span>,<span class=\"string\">'胡歌'</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(I.index(<span class=\"string\">'胡歌'</span>))</span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></table></figure>","cover":null,"content":null,"min2read":1,"word4post":410,"url":"/posts/32939/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 学习笔记_6：global 与 nanlacal 的区别","slug":"Python学习笔记_6：global 与 nanlacal 的区别","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/45048.json","excerpt":"<p> 之前我在 matlab 的笔记里介绍过一次 global 的用法 </p><p> 这次在 python 中介绍下 global 和 nanlacal 的区别 </p><p><strong>global 函数：</strong></p><p> 在函数中修改全局变量 </p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>I = <span class=\"string\">'ABC'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">global</span> I</span><br><span class=\"line\">\t\tI = <span class=\"string\">'123'</span></span><br><span class=\"line\">\t\tprint(I)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>fun()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(I)</span><br><span class=\"line\">% 输出为 </span><br><span class=\"line\"><span class=\"number\">123</span></span><br><span class=\"line\"><span class=\"number\">123</span></span><br></pre></td></tr></table></figure>","cover":"https://img-blog.csdnimg.cn/20200306152352813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":358,"url":"/posts/45048/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 学习笔记_5：字符串格式化符号及进制转换","slug":"Python学习笔记_5：字符串格式化符号及进制转换","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/22649.json","excerpt":"<p> 介绍下经常用得到的格式化字符 </p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%c\t：格式化字符及其 ASCII 码 </span><br><span class=\"line\">%s\t：格式化字符串 </span><br><span class=\"line\">%d\t：格式化整数 </span><br><span class=\"line\">%f\t：可指定小数点精度 </span><br><span class=\"line\">%e\t：用科学计数法表示小数 </span><br><span class=\"line\">%g\t：根据值的的具体情况使用 %f 或 %e</span><br><span class=\"line\">%o\t：八进制 </span><br><span class=\"line\">%x\t：十六进制 </span><br></pre></td></tr></table></figure>","cover":null,"content":null,"min2read":"1","word4post":177,"url":"/posts/22649/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 学习笔记_4 列表和元组的区别","slug":"Python学习笔记_4：列表和元组的区别","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/44475.json","excerpt":"<p> 上节我主要详细的介绍了一下列表的用法 </p><p> 突然想起来需要说一下列表和元组的区别, 所以这篇文章就简洁点, 以文字为主 </p><p><strong> 列表: 存放的是暂时的元素, 可以更改, 增添 </strong></p><p><strong> 元组: 存放的是不可更改的元素, 不可删除, 不可添加, 不可修改 </strong></p>","cover":"https://img-blog.csdnimg.cn/20200304212858622.png","content":null,"min2read":1,"word4post":400,"url":"/posts/44475/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 学习笔记_3：python 列表的使用方法—详细","slug":"Python学习笔记_3：python 列表的使用方法—详细","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/36135.json","excerpt":"<p> 今天已经开始了第三个 python 的笔记了 </p><p> 我想开始介绍一下列表的一些使用方法 </p><p>“列表”是什么？？</p><p></p><p> 其实就是 C 语言的数组, 不知道为什么在 python 中有的人说列表有的人说数组 </p>","cover":"https://img-blog.csdnimg.cn/20200304181714958.png","content":null,"min2read":3,"word4post":798,"url":"/posts/36135/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 学习笔记_2：判断 str 类型的函数","slug":"Python学习笔记_2：判断str类型的函数","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/57588.json","excerpt":"<p> 相信大家都喜欢表情包吧 </p><p> 话说学习 Python 一定要坚持，持之以恒，万事开头难嘛 </p><p></p><p> 哈哈，稍微皮一下 </p>","cover":"https://img-blog.csdnimg.cn/2020030218253379.png","content":null,"min2read":1,"word4post":364,"url":"/posts/57588/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python 学习笔记_1：print 中 end 的用法 print（‘’，end=''）","slug":"Python学习笔记_1：print中end的用法 print（‘’，end=''）","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/54779.json","excerpt":"<p> 学了那么久的 python，都没有过系统的总结一下知识点，所以我决定在这里出一次 python 知识点集合——Python 学习笔记。<br></p>","cover":"https://img-blog.csdnimg.cn/20200302170928468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":223,"url":"/posts/54779/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]},{"title":"Python99 道经典练习题答案","slug":"Python99道经典练习题答案","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/33069.json","excerpt":null,"cover":null,"content":null,"min2read":"1","word4post":14,"url":"/posts/33069/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"入门","path":"api/categories/入门.json","url":"/categories/python/入门/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"入门练习题","path":"api/tags/入门练习题.json","url":"/tags/入门练习题/"}]},{"title":"鱼 C 论坛小甲鱼 Python 课后题","slug":"鱼C论坛小甲鱼Python课后题","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/50744.json","excerpt":null,"cover":null,"content":null,"min2read":"1","word4post":187,"url":"/posts/50744/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"入门","path":"api/categories/入门.json","url":"/categories/python/入门/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"}]},{"title":"新手如何使用 anaconda（python）—简单介绍","slug":"新手如何使用anaconda（python）—简单介绍","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/50452.json","excerpt":"<p> 我之前用 python 的 IDLE 去写代码，但是在深度学习的部分，代码频频报错，因为 python 的很多库都没有，而自己去下载的话速度极其的慢。</p><p> 所以下载 anaconda 了， anaconda 里已经下载了很多库（虽然依然没有我想要的库），但相比单单一个 python 软件便好用许多。</p><p> 这里介绍一下新手如何快速使用 anaconda（我也是刚接触 python，好在比 C 简单多了，和 matlab 又很像）：</p>","cover":"https://img-blog.csdnimg.cn/20200217161343829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":1,"word4post":469,"url":"/posts/50452/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"入门","path":"api/categories/入门.json","url":"/categories/python/入门/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"anaconda","path":"api/tags/anaconda.json","url":"/tags/anaconda/"}]},{"title":"Anaconda 镜像下载地址","slug":"Anaconda镜像下载地址","date":"2020-06-17","updated":"2020-06-17","path":"api/posts/37594.json","excerpt":"<p> 清华大学镜像：<a href=\"https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a><br></p>","cover":"https://img-blog.csdnimg.cn/20200217154416803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","content":null,"min2read":"1","word4post":142,"url":"/posts/37594/","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"入门","path":"api/categories/入门.json","url":"/categories/python/入门/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"anaconda","path":"api/tags/anaconda.json","url":"/tags/anaconda/"}]}]}