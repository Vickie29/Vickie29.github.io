[{"title":"ValueError Dimension 0 in both shapes must be equal","url":"/posts/50048/","content":"今天重新训练yolo的时候出现了这个报错\n>ValueError: Dimension 0 in both shapes must be equal, but are 1 and 21. Shapes are [1,1,1024,24] and [21,1024,1,1]. for 'Assign_360' (op: 'Assign') with input shapes: [1,1,1024,24], [21,1024,1,1].\n\n一般情况就是class中的数量对不上\n<!--more-->\n可是我class中只有两类，肯定没有写错\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200521170207875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n看到上面3、4两行都是被回车符占了，于是删除\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200521170323900.png)\n\n结果真的能用了，很奇怪，之前好像这样没问题的呀，记不清了...反正能解决问题就行\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"ModuleNotFoundError：No module named “ckeditor”","url":"/posts/29537/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200518195810898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n我使用 `pip3 install ckeditor Collecting ckeditor` 安装也报错\n\n解决方法：`pip3 install django-ckeditor\nCollecting django-ckeditor`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200518195956173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"Command “python setup.py egg_info” failed——完美解决","url":"/posts/2659/","content":"用 ubuntu 安装 `django-mdeditor==0.1.13` 时报错：\n>Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-2XpM94/django-mdeditor/\n\n有人说是`setuptools`的版本太低，于是我镜像源下更新了一下： `pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade setuptools`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200518185849980.png)\n<!--more-->\n完全没用\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200518185647662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**解决方法：**`pip3 install django-mdeditor==0.1.13`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200518185754776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n问题解决，之前安装 Django 也是这种报错，`pip` 换成 `pip3` 就完全解决了\n","categories":["python","error&库"],"tags":["python","error&库","ubuntu"]},{"title":"人头录音原理及解释","url":"/posts/51563/","content":"简介：\n\n本文简单介绍了环绕声基础知识，还介绍了各种双声道虚拟环绕声（多声道）的技术。最近突然对虚拟环绕声感兴趣，整理了一下相关知识。\n\n1. 何为环绕声\n普通的立体声只能分清左右两个方向的声音，而环绕声还能让人声音的前后左右各个方位，更有空间感仿佛置身于现场。常见的环绕声主要有 5.1 声道与 7.1 声道两种，要重现环绕声也相应的需要 6 个或者 8 个音箱。\n<!--more-->\n电影中最常见的环绕声格式是杜比数字和 DTS，两者是竞争对手关系，电影 DVD 中一般包含有其中一种或者两种音轨都有。此外，这两种格式也有多个不同的版本，这里就不作详细介绍。\n\n除了这两种格式之外，部分蓝光光盘也提供 LPCM 格式的音轨，这是一种未经压缩的音频格式，体积最大。压缩后的音频解码成 PCM 格式才能播放，所以这种格式无需解码。理论上 LPCM 格式无压缩音质好，无需解码，是最理想的格式，但由于光盘容量是有限的，音频体积大会挤占视频的空间。可以计算 96kHz 采样率，24 位采样精度，7.1 声道的 LPCM 音轨每秒数据量是\n\n>96k * (24 / 8) * 8 = 2.3MB\n>\n那么一部 90 分钟的电影仅音频就占用了约 12.4 GB 空间，而单面蓝光光盘才 25GB。折中办法是无损压缩，类似于 zip 文件解压后可以 100% 还原成压缩前的文件，杜比和 DTS 都推出了相应的音频格式，分别叫杜比 TrueHD 和 DTS-HD Master Audio。这两种格式除了需要解码之外，和 LPCM 音质没有区别。\n\n说到无损压缩我们常见的音乐中还有 APE 和 FLAC。APE 不支持多声道，FLAC 可以支持，理论上也可以用于电影光盘，但是没有商业化产品支持，所以没有得到应用。FLAC 是免费、开源的音频格式，但目前还没有电影公司采用，没有播放器、解码器以及音响设备支持。网上已有字幕组使用 FLAC 制作多声道的电影文件，目前只能在电脑上软件解码。\n\n回放环绕声的方法：\n\n多声道音箱。需要多个音箱，而且摆位要正确，但效果最好。\n多单元耳机。多个扬声器单元放在一个耳机上，产品很少。\n虚拟环绕声。经过算法处理成立体声，用普通耳机回放，下面将详细介绍。\n2. 虚拟环绕声\n这里只讨论把多声道音频经过算法处理变成立体声的虚拟环绕声，还有一类是把立体声音频经过算法处理使其具有空间感（很多音效宣传具有此功能）的技术，个人觉得后者无意义只能算是一种音效。\n\n![HRTF 示意图，来源于维基百科](https://img-blog.csdnimg.cn/2020051421502336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n虚拟环绕声都是基于 HRTF（Head Related Transfer Functions）头部相关传输函数来实现的，只是各家的算法以及测量数据有差异，效果也就各不相同。关于 HRTF 引用数码多上的简单介绍：人耳在接收到音源发出的声音时，人的耳廓、耳道、头盖骨、肩部等对声波的折射、绕射和衍射以及鼓膜接收到的信息会被大脑所接受，大脑通过经验来对声音的方位进行判断。根据这一原理，通过信号处理的数学方法，我们构建了 HRTF（Head Related Transfer Functions）头部相关传输函数，根据多组的滤波器来虚拟实现人耳接收到的“位置信息”。关于 HRTF 的详细原理，数码多上同样有一篇文章 HRTF音频3D定位技术综述。有了这个基础知识，我们就可以分析各种各样的虚拟环绕声相关技术。\n\n2.1 人头录音（Dummy head recording）\n一般录制环绕声音频需要使用多个麦克风，例如 5.1 声道至少需要 5 个麦克风，而一般音乐是双声道两个麦克风。人头录音也是使用两个麦克风录音，但是模拟了人头听音的效果，相当于把两个麦克风放在人的耳朵里面。因为就算是多声道的音箱，人最终都是靠两个耳朵来听，所以在最理想的情况下人头录音是可以达到真实环绕声效果的。但是现实都是不完美的，首先人头录音要求回放时必须使用耳机（录音时麦克风也是放在耳朵里），保证声音没有串扰；其次每个人身体有差异，大脑对声音的判断也不同，录音不可能按照每个人去完美适配。这就造成了人头录音，包括下面提到的虚拟环绕声技术，效果都不如多声道音箱理想。\n\n2.2 游戏 3D 音效\n很多游戏也有 3D 音效，计算游戏场景中多个音源（脚步声、远处动物等等）与环境相互作用的效果（反射、阻碍等等）得出游戏中玩家所在位置的全方位声音，这个声音可以认为是环绕声的，然后这个声音经过 HRTF 处理得到立体声输出，当然也可以直接编码成杜比或 DTS 输出到外部多声道音箱。创新的 EAX 以及以前的 Aureal 3D 音效就是属于这一类。\n\n2.3 虚拟环绕声回放\n很多厂家有类似的技术，例如 Dolby Headphone、DTS Surround Sensation、索尼 Virtualphones Technology 等等，都是把多声道的各种格式音频（杜比/DTS/LPCM等）解码并经过自家的基于 HRTF 的处理技术转换成立体声，然后用户可以使用耳机回放。下面简单介绍一下两种常见场景：\n\n视频播放器集成 HRTF 插件。就是视频播放器解码完多声道音频后，再经过 HRTF 处理成立体声输出。例如 PotPlayer 里面有一个音频输出选项叫“虚拟环绕（HRTF）”，PowerDVD 也带有 Dolby Headphone 插件。\n外部解码器。杜比/DTS/LPCM 等多声道音轨通过光纤或 HDMI 输出到带有虚拟环绕声处理功能的解码器播放，然后输出到耳机。例如搭载有 Dolby Headphone 的游戏耳机，索尼的 MDR-DS 系列搭载有 Virtualphones Technology 技术的耳机。\n3. 总结\n总的来说，靠谱的虚拟环绕声技术都是通过把原始多声道音频经过 HRTF 处理得到的，比直接 downmix 到双声道空间感要强，但感觉还是不太自然，效果最好的还是多声道音箱。如果想体验 Dolby Headphone 的效果，这篇文章里面提供有在线试听 5.1 channel audio through ordinary headphones using MPC-HC。\n\n转载请注明出处：http://www.cnblogs.com/imouto/archive/2013/03/13/virtual-surround-sound-explained.html\n\n本文外部镜像：http://oteku.blogspot.com/2013/03/virtual-surround-sound-explained.html\n\n文章出处：[https://www.cnblogs.com/imouto/archive/2013/03/13/virtual-surround-sound-explained.html](https://www.cnblogs.com/imouto/archive/2013/03/13/virtual-surround-sound-explained.html)","categories":["硬件"],"tags":["硬件"]},{"title":"教女朋友学会用ESP8266实现wifi杀手——有固件","url":"/posts/37492/","content":"> 固件来自大神：FengMo\n> 固件下载地址：https://download.csdn.net/download/qq_45504119/12407789\n> 也可以加我的交流群，我会在群里分享出来哦：977947271\n> 2020/5/30：\n> 近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要正确填写我的CSDN账号昵称，只是为了过滤一些不好的人。\n<!--more-->\n# 事件前言\n前阵子我自己翻 tb 的时候发现一个esp8266模块还挺好玩的，于是20多块入手了一个esp8266模块\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511084858957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n这里给大家提个醒，esp8266本身可以用于智能家电和WiFi杀手，但是仅限于二代，三代不能用作WiFi杀手，所以大家买的时候要问下客服哦。\n\n**友情提醒**：后来我在 “拼朵朵” 上面看到有卖不到十元的esp8266，大家有兴趣的可以买着玩，不过不知道性能行不行，新手可以试试。\n\n## 如何下载固件\n大家把 esp8266 模块连接电脑之后，解压我给的 esp8266 固件文件\n\n**1、安装驱动**\n打开驱动文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511091038960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n运行 `CH341SER.EXE`，同时确保 esp8266 模块已经连接电脑\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511091122964.png)\n\n点击安装\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511091341503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511091422210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n如果弹出驱动安装失败，肯定是电脑和esp8266没有正确连接，就请打开 控制面板中的设备管理器，看看有没有端口显示\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511091538265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**2、导入固件**\n运行 `ESP8266Flasher.exe`， \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511091741296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n选择设备管理器中查到的端口号，我这里是 COM3\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511091946617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n选择 `Config` 并导入固件 `Wi-PWN.ino.CH.bin` 的地址\n\n我这里是：`C:\\Users\\27511\\Desktop\\ESP8266\\固件\\Wi-PWN.ino.CH.bin`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511092113641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n点击 `Advanced` ，其中 `Baudrate` 可在 esp8266 的背面找到具体数值，我这里是 9600\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511092456457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**3、烧录**\n好了之后，现在回到工具的operation这个页面也就是第一个页面，点击 `Flash`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020051109281540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n稍微等一等，直到光条拉满，就说明固件下载好了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511100310789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n## 手机连接wifi进行XX操作\n手机应该可以搜到一个新的wifi,而且没有密码的，连接此网络，并浏览器登录地址：192.168.4.1\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511123134386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511123202986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n点击接受，会自动给一个新的wifi登录密码，一般是：`rootaccess`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511123316340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n点击继续之后会让我们重新连接\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511123438258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n回到手机连接重新输入密码连接此网络，再登录 `192.168.4.1`，就可以进行钓鱼操作了\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511123531529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200511123544901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n>在这里提醒大家，此博文操作完全是技术分享，钓鱼操作请大家使用自己家的 wifi 或手机热点为对象，请勿因一己私利或单纯觉得好玩对别人造成麻烦。\n>.\n>下一个博文我会给大家分享如何用python暴力破解wifi密码，也只是纯技术分享，请大家勿用于非法操作\n>.\n>有兴趣的朋友可以进我的交流群，或者评论邮箱\n\n","categories":["硬件"],"tags":["硬件","ESP8266"]},{"title":"运行SSD-TensorFlow报错：tensorflow.python.framework.errors_impl.NotFoundError：","url":"/posts/15660/","content":"玩了很久的 yolo，今天下载了 SSD-TensorFlow 的代码，不过在运行的时候出现了一点问题\n\n官方的介绍是运行：`jupyter notebook notebooks/ssd_notebook.ipynb`\n\n但是在 `jupyter notebook` 中运行多有不便，我就将代码复制在了下面文件夹里，与 `ssd_notebook.ipynb` 放在了一块，可是出现报错：\n\n```python\ntensorflow.python.framework.errors_impl.NotFoundError: FindFirstFile failed for\n…/checkpoints:ϵͳ\\udcd5Ҳ\\udcbb\\udcb5\\udcbdָ\\udcb6\\udca8\\udcb5\\udcc4·\\udcbe\\udcb6\\udca1\\udca3 \n; No such process\n```\n<!--more-->\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200506152235306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n可以看到：在 `demo_test.py` 的大概15、42、73行的位置，路径全都写错了\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200506153032938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200506153046666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200506153053557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n以43行为例将：`ckpt_filename = '.../checkpoints/ssd_300_vgg.ckpt'` 改为：`ckpt_filename = './checkpoints/ssd_300_vgg.ckpt'`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200506153309230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n而且有一点要注意，我这里路径写的是相对路径，也就是从我 `demo_test.py` 所在的位置到 `checkpoints` 文件所在的相对位置，所以很明显路径需要添加东西，或者我直接将  `demo_test.py` 文件放在主文件夹下面即可：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200506153618543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n## 总结：\n**1、将路径前面的点删除至只留下一个**\n\n**2、注意相对路径，否则会报同样的错误**\n\n------------\n>题外话：\n>我也只是个学生，做项目的时候刚好看到 yolo 了，就玩了一阵子，现在准备玩 ssd ，这些只是很简单的东西，之后我会慢慢的把我做的比较深入的东西写出来(说实话…一般没人看)，我准备创建一个开源项目的交流群。\n我本身很菜，但是玩过一些开源的项目，本身电气专业，也喜欢自己用单片机做东西，现在自己发过论文、国际发明专利、国内发明专利。马上准备考研了，也希望能遇到一些大佬，给些指点，也可以大家一起讨论问题，解决问题。\n>群号：977947271\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200506154001109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"教女友学会python+yolov3调用笔记本摄像头——实时进行识别","url":"/posts/60092/","content":">我终于回来啦，快一个月没有正式写博客了\n>最近忙着把老师交给我的项目完成，又从老师经费里白嫖了好多好玩的硬件，网课都没咋听，今天介绍完这个小点，马上就要准备看模电了\n>其实我做项目时完全从0开始，所接触的东西也是零零散散的，我想表达的东西用面向新手的方式写出来，之后开始介绍软硬件结合的东西。\n>也可以加我的交流群，所有资料我会在群里分享出来哦：977947271\n> 2020/5/30：\n> 近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要1元钱，但是进群后我会将钱退还给大家，只是为了过滤一些不好的人。\n\n>环境：win10、py3.6、yolov3\n<!--more-->\n## 1、准备工作\n**1、yolo3源代码：**[github_keras-yolo3](https://github.com/qqwweee/keras-yolo3)\n\n**2、权重文件：**：[官网_yolov3_weights](https://pjreddie.com/media/files/yolov3.weights)（点击直接下载）或者 我的百度网盘文件 链接：\n\n```python\nhttps://pan.baidu.com/s/1YD5dtSrEkcBO0PRHO7eLlw \n提取码：1uub \n```\n\n\n我也有自己训练的只识别 person 的权重文件，有需要的话可以评论邮箱地址\n如果你是新手中的新手，可以先参考下我的这两篇文章：\n1、[keras-yolov3目标检测详解——适合新手](https://blog.csdn.net/qq_45504119/article/details/105033492)（教你运行成功yolo）\n2、[win10+yolov3+python训练自己的模型](https://blog.csdn.net/qq_45504119/article/details/105052478)（教你训练自己的模型去识别）\n\n## 2、添加yolo模型\n先将 yolov3.weights 权重放在下载的yolo文件中\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504155521890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n我这里用 pycharm 打开 yolo 源代码，\n在命令行输入：`python convert.py yolov3.cfg yolov3.weights model_data/yolo.h5`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504155725333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n运行命令直到出现：`Saved Keras model to model_data/yolo.h5` \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504160013801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n且 model_data 中多了个 yolo.h5 文件就代表准备工作完成了\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504160219163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n## 3、改代码并运行\n打开 yolo.py 大概在170多行的位置找到：`vid = cv2.VideoCapture(video_path)`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504160359383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n将其改为：`vid = cv2.VideoCapture(0)`\n\n这里我们使用opencv库中的VideoCapture()函数创建摄像头对象，参数0是表示调用第一个摄像头，一般就是笔记本的内置摄像头。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504160624971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n然后打开 yolo_video.py 并运行\n下面是我刚刚运行并演示出的效果，手机拿的有些近，所以没有识别出手机\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504161144308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n不过细心的朋友看下代码就知道，其实这种方法实际上是读取摄像头某一帧的画面，对此画面进行图片式的识别。但是我们很多项目其实并不要求保存视频，或者处理的很流畅，我们需求就是单纯识别的话这种方法完全满足项目的需要了。\n.\n\n\n## 4、用自己训练的模型来识别\n\n上图有些瑕疵，只识别出了 person，但我拿开手机的话，我背后的很多物品，官方的权重都能识别，包括手机壳上的小狗。\n\n但是很多情况下我们只想让他识别出一种或几种物品怎么办呢？\n\n比如我之前训练出的只能识别出人的的权重，下面就介绍一下方法。\n\n可以看我这篇文章：[win10+yolov3+python训练自己的模型——适合新手](https://blog.csdn.net/qq_45504119/article/details/105052478) 去自己训练出模型。\n \n也可以直接用我训练的模型：\n\n```python\n链接：https://pan.baidu.com/s/1NSR2XC-SmId9O1E0QvNGcg \n提取码：cs99\n>>>网盘下载的慢的话可以评论下邮箱，QQ传文件还是蛮快的<<<\n```\n将我的模型下载好后放在 model_data 文件夹中，改名为：yolo.h5 \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504162339142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n像上文一样运行 yolo_video.py 文件就可以了。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504163355373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n\n我也只是个学生，做项目的时候刚好看到 yolo 了，就玩了一阵子，这些只是很简单的东西，之后我会慢慢的把我做的比较深入的东西写出来(说实话...一般没人看)，所以呢，今天2020/5/4，我准备创建一个开源项目的交流群。\n我本身很菜，但是玩过一些开源的项目，本身电气专业，也喜欢自己用单片机做东西，现在自己发过论文、国际发明专利、国内发明专利。马上准备考研了，也希望能遇到一些大佬，给些指点，也可以大家一起讨论问题，解决问题。\n\n群号：977947271\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504165237970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"关于yolo配合硬件的小结——个人笔记","url":"/posts/56562/","content":"这个纯属个人笔记了——完全是怕忘\n很久没有写博客，也不太知道想写什么，最近玩的东西比较多：esp8266做wifi杀手、配合esp32搭建了个简易的网络摄像头，改yolo玩的一阵子，入手几个红外模块，现在正在玩 USART HMI。\n\n今天用yolo和红外编码打开空调的时候，因为yolo是不停的循环调用摄像头识别人数的\n<!--more-->\n>说到这里感觉最近还是有很多可以写的东西的，不过学校快开学了，我过阵子抽时间把最近学到的都写一下吧。\n\n所以它就第一次识别人数后进入红外编码打开空调，然后第二次识别满足人数要求时，又调用红外编码模块进行打开空调的操作，搞得空调一直响...所以我想当它第一次满足条件A，继续循环再满足条件A时暂时不进入A中，直到满足条件B后，如果出现满足条件A的情况才能进入A。所以我想起来之前写的关于global语句的使用。\n\n贴代码：\n\n```python\n逻辑关系很简单，但是移植的时候出了点小毛病\nimport time\nxunhuan = 2\ndef dakai():\n        global xunhuan\n        while xunhuan ==1:\n            break\n        else:\n            print(xunhuan)\n            print('123456')\n            xunhuan = 1\n\n\ndef guanbi():\n    global xunhuan\n    while xunhuan == 0:\n        break\n    else:\n        print(xunhuan)\n        print('abcdef')\n        xunhuan = 0\n\nwhile 1:\n\n    if xunhuan ==1:\n        xunhuan =1\n    if xunhuan ==0:\n      xunhuan = 0\n    a=input('输入人数：')\n    a=int(a)\n    if a>=3:\n        dakai()\n    time.sleep(5)\n\n    if a<=2:\n        guanbi()\n    time.sleep(5)\n\n```\n移植到yolo时移植出现global语句的错误，最后把xunhuan的定义加在了yolo.py的class外面才成功\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503114812548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n最近玩yolo还是蛮多的，结合硬件玩了好多东西，最近学校课复习完之后再慢慢分享出来吧。\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"python实现人数识别目标识别","url":"/posts/54324/","content":"python 实现 yolo 人数识别或目标识别：[https://blog.csdn.net/qq_45504119/article/details/105033492](https://blog.csdn.net/qq_45504119/article/details/105033492)","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"ERROR Cannot uninstall 'xxx'. It is a distutils installed project and thus we cannot accurately","url":"/posts/14185/","content":"今天安装 `serial` 时报错：\n\n```python\nERROR: Cannot uninstall 'PyYAML'. It is a distutils installed project and thus we\n       cannot accurately determine which files belong to it which would lead to \n       only a partial uninstall .\n错误：无法卸载“ PyYAML”。 这是一个distutils安装的项目，因此我们\n        无法准确确定哪些文件属于该文件，这将导致\n        仅部分卸载\n```\n<!--more-->\n我的环境：win10、py3.6\n\n解决办法：\n\n```python\n报错 Cannot uninstall 'abcd'，那就 pip install --ignore-installed abcd\n```\n\n因为我报错 `Cannot uninstall 'PyYAML'`，所以\n```python\npip install --ignore-installed pyyaml\n#Successfully installed pyyaml-5.3.1\n'安装完成后,再下载自己想要下载的包'\npip install serial\n#Successfully installed iso8601-0.1.12 serial-0.0.97\n```\n就成功解决了。\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"pytorch 安装过程出现： No module named 'tools.nnwrap'——已解决","url":"/posts/19425/","content":">环境：win10、py3.6\n\n可以先参考下面这个博文：\n[安装 torch 详细解决方法](https://blog.csdn.net/qq_45504119/article/details/104905471)\n\n这篇文章是我之前写的，后来重装系统，忘了没安装 torch，所以报错，里面文件下载和安装说的很详细。\n<!--more-->\n## 事件发生：\n```python\npip install torch\n\n报错：\nModuleNotFoundError: No module named 'tools.nnwrap'\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200409110528138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n## 准备文件：\n\n我需要下载两个文件： `torch-1.4` 和 `torchvision-0.4`\n\n`torch` 我选择 `torch-1.4.0+cpu-cp36-cp36m-win_amd64.whl`\n\n`torchvision` 我选择： `torchvision-0.4.2+cpu-cp36-cp36m-win_amd64.whl`\n\n**下载方法参考上面的链接**\n## 解决方法：\n直接：`pip install -i` 安装文件，具体方法参考上文链接就可以。","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"cpu运行gpu上的pytorch 报错AssertionErrortorch not compiled with cuda enabled——已解决","url":"/posts/54195/","content":"感觉今天介绍的这种方法可以解决所有这种报错出现的问题\n\n## 事件发生：\n```python\n报错：AssertionError:torch not compiled with cuda enabled\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200409104210488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n## 解决方法：\n\n后来看到这个代码\n\n```python\nparser.add_argument('--test_device', default=\"cuda:0\", type=str,\n                    help='cuda:0 or cpu')\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200409104356554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n把 cuda 换成 cpu\n\n```python\nparser.add_argument('--test_device', default=\"cpu:0\", type=str,\n                    help='cuda:0 or cpu')\n                    \n%上面的 default=\"cuda:0\" 改成 default=\"cpu:0\"，\n下面的 help='cuda:0 or cpu' 因为定义了可以使用 cpu 所以就不用改了\n```\n当然也可以改成：\n\n```python\nparser.add_argument('--test_device', default=\"cpu:0\", type=str,\n                    help='cpu:0')\nparser.add_argument('--test_device', default=\"cuda:0 or cpu\", type=str,\n                    help='cuda:0 or cpu')\n```\n\n## 总结：\n**总结一下就是：出现的 cuda 全部换成 cpu 就可以运行！！！**\n\n## 这种方法应该适用于这种报错：\n\n为了尝试这种方法是不是适用于很多情况，我找了也出现这种报错的一位博主尝试，果然可以解决。\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"matlab创建下载进度条","url":"/posts/65431/","content":">最近玩GUI玩的比较多，想分享一些好玩的东西，就从最简单的开始吧\n\n大家都知道matlab的进度条吧，这里实现了创建进度条，并且当进度条达到100%时就关闭进度条界面\n<!--more-->\n\n```python\nstate = 0;                                 \nh = waitbar(0, '请等待...', 'Name', '进度条', 'CreateCancelBtn', ...\n    'state = 1; delete(h); clear h');       \nh1 = findall(h, 'style', 'pushbutton');     \nset(h1, 'string', '取消', 'fontsize', 10)   \nfor i = 1 : 100                             \n    waitbar(i / 100, h, ['进度完成' num2str(i) '%']);\n    pause(0.1)\n    if state                                \n        break\n    end\nend\nif exist('h') == 1     \n    delete(h); \nend\n\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040909231571.png)","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"安装Mathtype后无法使用——已解决","url":"/posts/30328/","content":"\n## 事件背景：\n>word 中安装 mathtype 后无法正常使用，总是提示文件未找到等报错？？？\n\n比如我遇到的一下情况：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406194329852.png)\n<!--more-->\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406194341587.png)\n\n## 解决方法：\n很简单，添加一下受信任的路径，移动一下运行 mathtype 的文件就可以了\n\n**1、添加受信任路径**\n\n```python\n点击 “文件”——>“选项”\n```\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040619485030.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040619503350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n```python\n“信任中心” 中选择 “信任中心设置”\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406195203668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n```python\n将\noffice:的\"STARTUP\"文件路径\n和\nMathType:的\"MathPage\"文件路径\n添加进去\n\n这里我的文件路径分别是：(\"每个人的路径可能都不一样，多找找就行了\")\nC:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\STARTUP\nC:\\Program Files (x86)\\MathType\\MathPage\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020040619552335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**2、添加运行所需文件**\n\n**（1）**`MathType Commands 6 For Word 2010.dotm`  文件\n```python\n我的文件路径是：\nC:\\Program Files (x86)\\MathType\\Office Support\\64\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406200937473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n```python\n将它移动到：\nC:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\STARTUP 文件夹里\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406201345423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**（2）**`MathPage.wll` 文件\n\n```python\n我的文件路径是：\nC:\\Program Files (x86)\\MathType\\MathPage\\64\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406201955430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n```python\n将它移动到：\nC:\\Program Files (x86)\\Microsoft Office\\root\\Office16 文件夹里\n\"注意哦：MathPage.wll 和上文中 STARTUP文件夹 是 并放在一起的 \"\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406202543454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n然后重启 word\n\nMathType 就可以正常使用了\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200406203406349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n","categories":["win10"],"tags":["win10"]},{"title":"Office2016与Visio2016不兼容——已解决","url":"/posts/1019/","content":"很久之前为了写专利下载的Visio2016，平时也只用wps，没用过office。\n\n最近安装 office 时提示：\n\n```python\n很抱歉，无法安装office，因为您的计算机上已经安装了office程序：\n\nMicrosoft Office 32-bit Components 2016\nMicrosoft Visio Professional 2016\n\n32位和64位版本的Office程序不兼容，因此您一次只能安装一种类型。\n请尝试安装64位版本的Office，或卸载其他64位Office程序，然后再尝试此安装。\n```\n<!--more-->\n因为不想卸载 visio2016，所以就把 office 安装在了虚拟机里，可是使用起来异常麻烦\n\n只能不停尝试如何才能实现兼容\n\n**在国外的论坛上终于找到了解决方法：**\n\n```c\noffice的安装是即点即用，visio的安装是 windows installer\n\n不管我们电脑里安装了visio还是office\n\n安装另一个软件时都会报错\n\n所以我们使用两个软件同时安装的方法就可以完美解决问题\n```\n\n\n**（1）删除现有的 office 或 visio** \n\n进入控制面板把现有的软件删除，删除过后电脑关机，以免有卸载残留。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200405142708366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**（2）同时安装visio和office**\n\n**注意这里的一个坑**  **：** 虽然是同时安装，但是我们也要也有安装的先后啊！！！！先安装visio再安装office才行。\n\n\n先打开 visio2016 的安装 exe 文件，设置好安装路径后，点击“开始安装”。\n\n然后立刻打开office的 exe 文件，立刻开始安装office \n\n```python\n顺序千万不能弄反，我昨晚就先安装office再安装visio时，就报错说:\noffice的即点即用正在使用，无法安装visio\n```\n\n下面附上一张昨晚的安装截图：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200405143207623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n现在我的visio2016和office2016 已经可以正常使用了\n\n终于不用写个作业还要跑到虚拟机里弄了....","categories":["win10"],"tags":["win10"]},{"title":"python绝对兼容的库配置——机器学习&爬虫","url":"/posts/3611/","content":">  **Time: 2020/4/1   15:01**\n\n更新一下我的 python 库的版本，以免以后我自己搞错了…\n\n相比上次机器学习的库，这次多了部分爬虫的库\n<!--more-->\n```python\nPackage                            Version\n---------------------------------- -----------\n-eras                              2.2.0\nabsl-py                            0.9.0\naiodns                             2.0.0\naiohttp                            3.6.2\nalabaster                          0.7.10\nanaconda-client                    1.6.14\nanaconda-navigator                 1.8.7\nanaconda-project                   0.8.2\nasn1crypto                         0.24.0\nastor                              0.8.1\nastroid                            1.6.3\nastropy                            3.0.2\nasync-timeout                      3.0.1\nattrs                              18.1.0\nAutomat                            20.2.0\nBabel                              2.5.3\nbackcall                           0.1.0\nbackports.shutil-get-terminal-size 1.0.0\nbackports.weakref                  1.0rc1\nbeautifulsoup4                     4.6.0\nbitarray                           0.8.1\nbkcharts                           0.2\nblaze                              0.11.3\nbleach                             1.5.0\nbokeh                              0.12.16\nboto                               2.48.0\nBottleneck                         1.2.1\nbrotlipy                           0.7.0\ncchardet                           2.1.6\ncertifi                            2019.11.28\ncffi                               1.11.5\nchardet                            3.0.4\nclick                              6.7\ncloudpickle                        0.5.3\nclyent                             1.2.2\ncolorama                           0.3.9\ncomtypes                           1.1.4\nconda                              4.8.3\nconda-build                        3.10.5\nconda-package-handling             1.6.0\nconda-verify                       2.0.0\nconstantly                         15.1.0\ncontextlib2                        0.5.5\ncryptography                       2.8\ncssselect                          1.1.0\ncycler                             0.10.0\nCython                             0.28.2\ncytoolz                            0.9.0.1\ndask                               0.17.5\ndatashape                          0.5.4\ndecorator                          4.3.0\ndefusedxml                         0.6.0\ndistributed                        1.21.8\ndocutils                           0.14\nentrypoints                        0.2.3\net-xmlfile                         1.0.1\nfastcache                          1.0.2\nffmpeg                             1.4\nfilelock                           3.0.4\nFlask                              1.0.2\nFlask-Cors                         3.0.4\nFlask-Login                        0.5.0\ngast                               0.2.2\ngevent                             1.3.0\nglob2                              0.6\ngreenlet                           0.4.13\ngrpcio                             1.27.2\nh5py                               2.8.0\nheapdict                           1.0.0\nhtml5lib                           0.9999999\nhyperlink                          19.0.0\nidna                               2.6\nidna-ssl                           1.1.0\nimageio                            2.3.0\nimagesize                          1.0.0\nincremental                        17.5.0\nipykernel                          4.8.2\nipython                            6.4.0\nipython-genutils                   0.2.0\nipywidgets                         7.2.1\nisort                              4.3.4\nitsdangerous                       0.24\njdcal                              1.4\njedi                               0.12.0\nJinja2                             2.10\njson5                              0.9.4\njsonschema                         2.6.0\njupyter                            1.0.0\njupyter-client                     5.2.3\njupyter-console                    5.2.0\njupyter-core                       4.4.0\njupyterlab                         0.32.1\njupyterlab-launcher                0.10.5\nKeras                              2.2.4\nKeras-Applications                 1.0.8\nKeras-Preprocessing                1.1.0\nkiwisolver                         1.0.1\nlabelImg                           1.8.3\nlazy-object-proxy                  1.3.1\nllvmlite                           0.23.1\nlocket                             0.2.0\nlxml                               4.2.1\nMarkdown                           3.1.1\nMarkupSafe                         1.0\nmatplotlib                         2.2.2\nmccabe                             0.6.1\nmenuinst                           1.4.14\nmistune                            0.8.3\nmkl-fft                            1.0.0\nmkl-random                         1.0.1\nmore-itertools                     4.1.0\nmpmath                             1.0.0\nmsgpack-python                     0.5.6\nmultidict                          4.7.5\nmultipledispatch                   0.5.0\nmysql                              0.0.2\nmysqlclient                        1.4.6\nnavigator-updater                  0.2.1\nnbconvert                          5.3.1\nnbformat                           4.4.0\nnetworkx                           2.1\nnltk                               3.3\nnose                               1.3.7\nnotebook                           5.5.0\nnumba                              0.38.0\nnumexpr                            2.6.5\nnumpy                              1.18.2\nnumpydoc                           0.8.0\nodo                                0.5.1\nolefile                            0.45.1\nopencv-contrib-python              4.2.0.32\nopenpyxl                           2.5.3\npackaging                          17.1\npandas                             0.23.0\npandocfilters                      1.4.2\nparsel                             1.5.2\nparso                              0.2.0\npartd                              0.3.8\npath.py                            11.0.1\npathlib2                           2.3.2\npatsy                              0.5.0\npep8                               1.7.1\nphantomjs                          1.1.4\npickleshare                        0.7.4\nPillow                             5.1.0\npip                                20.0.2\npkginfo                            1.4.2\npluggy                             0.6.0\nply                                3.11\nprompt-toolkit                     1.0.15\nProtego                            0.1.16\nprotobuf                           3.11.4\npsutil                             5.4.5\npy                                 1.5.3\npyasn1                             0.4.8\npyasn1-modules                     0.2.8\npycares                            3.1.1\npycodestyle                        2.4.0\npycosat                            0.6.3\npycparser                          2.18\npycrypto                           2.6.1\npycurl                             7.43.0.5\nPyDispatcher                       2.0.5\npyflakes                           1.6.0\nPygments                           2.2.0\nPyHamcrest                         2.0.2\npylint                             1.8.4\nPyMySQL                            0.9.3\npyodbc                             4.0.23\npyOpenSSL                          18.0.0\npyparsing                          2.2.0\nPyQt5                              5.14.1\nPyQt5-sip                          12.7.1\npyquery                            1.4.1\nPySocks                            1.6.8\npyspider                           0.3.10\npytest                             3.5.1\npytest-arraydiff                   0.2\npytest-astropy                     0.3.0\npytest-doctestplus                 0.1.3\npytest-openfiles                   0.3.0\npytest-remotedata                  0.2.1\npython-dateutil                    2.7.3\npytz                               2018.4\nPyWavelets                         0.5.2\npywin32                            223\npywinpty                           0.5.1\nPyYAML                             3.12\npyzmq                              17.0.0\nQtAwesome                          0.4.4\nqtconsole                          4.3.1\nQtPy                               1.4.1\nqueuelib                           1.5.0\nredis                              3.4.1\nrequests                           2.18.4\nrope                               0.10.7\nruamel-yaml                        0.15.35\nscikit-image                       0.13.1\nscikit-learn                       0.19.1\nscipy                              1.4.1\nScrapy                             2.0.1\nseaborn                            0.8.1\nselenium                           3.141.0\nSend2Trash                         1.5.0\nservice-identity                   18.1.0\nsetuptools                         39.1.0\nsimplegeneric                      0.8.1\nsingledispatch                     3.4.0.3\nsix                                1.11.0\nsnowballstemmer                    1.2.1\nsortedcollections                  0.6.1\nsortedcontainers                   1.5.10\nSphinx                             1.7.4\nsphinxcontrib-websupport           1.0.1\nspyder                             3.2.8\nSQLAlchemy                         1.2.7\nstatsmodels                        0.9.0\nsympy                              1.1.1\ntables                             3.4.3\nTBB                                0.1\ntblib                              1.3.2\ntensorboard                        1.12.2\ntensorflow                         1.12.0\ntensorflow-base                    0.0.0.post2\ntermcolor                          1.1.0\nterminado                          0.8.1\ntestpath                           0.3.1\ntoolz                              0.9.0\ntornado                            4.5.3\ntqdm                               4.43.0\ntraitlets                          4.3.2\nTwisted                            20.3.0\ntyping                             3.6.4\ntyping-extensions                  3.7.4.1\nu-msgpack-python                   2.5.2\nunicodecsv                         0.14.1\nurllib3                            1.22\nw3lib                              1.21.0\nwcwidth                            0.1.7\nwebencodings                       0.5.1\nWerkzeug                           0.14.1\nwheel                              0.31.1\nwidgetsnbextension                 3.2.1\nwin-inet-pton                      1.0.1\nwin-unicode-console                0.5\nwincertstore                       0.2\nwrapt                              1.10.11\nWsgiDAV                            3.0.2\nxlrd                               1.1.0\nXlsxWriter                         1.0.4\nxlwings                            0.11.8\nxlwt                               1.3.0\nyarl                               1.4.2\nzict                               0.1.3\nzope.interface                     5.0.2\n```\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"教女朋友学会用win10+yolov3+python训练自己的模型","url":"/posts/63366/","content":"> times：2020/3/23\n> 操作系统：win10 \n>环境：python 3.6\n>因为我之前把所有内容写在一篇文章里非常的乱，所以本文主线是训练自己的 yolo.h5 去识别图像中的人，所有小细节的操作，我都在文中添加了链接，新手的话需要注意看一下。\n>// 有任何的问题都可以直接评论，还有资料的话直接留言邮箱，说明问题//\n>//也可以评论下加下微信询问//\n>大家一起加油学习yolo，之后我会再出一篇详细介绍yolo代码的文章\n>新创建的小小交流群：977947271 想要资料的也可以在群里要哦\n>2020/5/30：\n\n\n如果你是 yolo 小白，或者环境配置等一直报错，请先参阅上一篇博文：[keras-yolov3目标检测详解——适合新手](https://blog.csdn.net/qq_45504119/article/details/105033492) (环境配置、用官方权重识别自己的图片)\n<!--more-->\n## 本文目的：\n前面有篇文章说的是利用官方的权重直接识别自己的图片，我也展示了识别的效果。\n\n今天我介绍一下如何创建自己的数据集去训练属于自己的 `model`\n\n## 前提准备：\n**1、配置好环境的 python、anaconda 或 pycharm**\n\n**2、labelimg 软件：下载方法：** [labelimg的下载与使用](https://blog.csdn.net/qq_45504119/article/details/105038483)\n\n**3、准备一些图片，创建训练需要的 VOC 文件**\n\n**（1）** 官方的VOC2007下载链接：[voc2007下载链接](http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtrainval_06-Nov-2007.tar)，可以从这里找需要的图片，或者一些有基础的朋友可以写爬虫去爬一些图片\n\n**（2）** voc2007百度网盘下载链接：\n\n```c\n链接：https://pan.baidu.com/s/18wqRTZDSz5NQEtvq0u0a1g \n提取码：hexy \n```\n**（3）** 可以自己准备图片，不过最好准备多一点\n.\n.\n\n## 正式训练步骤：\n\n**一、准备自己的voc2007数据集**\n\n先用 pycharm 或 spyder 打开 keras-yolo3 文件夹，用 pycharm 或 spyder 是为了看文件夹更方便，直接在 anaconda 里运行也是可以的\n\n**1、打开文件夹**\n\n先按照这篇文章的步骤操作：[keras-yolov3目标检测详解——适合新手](https://blog.csdn.net/qq_45504119/article/details/105033492)\n\n完成后打开的文件夹应该是这样的：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323190223242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**2、新建voc2007数据集（存放自己的图片及标注信息）**\n\n新建的文件夹：如下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323194549165.png)\n\n`ImageSets` 文件夹下还有个名为  `Main`  的小文件夹\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323201423401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n```c\nVOCdevkit{\n\t\t\tVOC2007{\tAnnotations\n\t\t\t\t\t\tImageSets{main}\n\t\t\t\t\t\tJPEGImages\t}\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n虽然表达的很丑，但是上面有图，应该还是可以看明白的\n注意：文件夹的名称必须和上面展示的一样，这是 yolo 默认的\n\t  不然还需要改代码才行\t\t\t\t\n```\n\n**3、用labelimg软件对自己的图片进行信息标注**\n\n----**labelimg 的使用方法：**[labelimg 下载和标注 xlm 文件](https://blog.csdn.net/qq_45504119/article/details/105038483)\n>想要训练自己的模型就要学会 labelimg 的使用，实在不想学的...就评论一下邮箱，我直接把我标注好的 VOC2007 文件夹打包发给你们吧\n\n（1）需要训练的图片放在 `JPEGImages` 里面：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323195853955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323200108855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n（2）labelimg 标注的 xlm 文件放在 `Annotations` 里面：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323200132768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323200159422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**4、在 VOC2007  里新建一个 py 文件**\n\n**我这里取名 voc.py**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323201211208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**voc.py 的代码：**\n\n```python\nimport os\nimport random\n\ntrainval_percent = 0.2 #测试集占0.2\ntrain_percent = 0.8    #训练集占0.8\nxmlfilepath = 'Annotations'\ntxtsavepath = 'ImageSets\\Main'\ntotal_xml = os.listdir(xmlfilepath)\n\nnum = len(total_xml)\nlist = range(num)\ntv = int(num * trainval_percent)\ntr = int(tv * train_percent)\ntrainval = random.sample(list, tv)\ntrain = random.sample(trainval, tr)\n\nftrainval = open('ImageSets/Main/trainval.txt', 'w')\nftest = open('ImageSets/Main/test.txt', 'w')\nftrain = open('ImageSets/Main/train.txt', 'w')\nfval = open('ImageSets/Main/val.txt', 'w')\n\nfor i in list:\n    name = total_xml[i][:-4] + '\\n'\n    if i in trainval:\n        ftrainval.write(name)\n        if i in train:\n            ftest.write(name)\n        else:\n            fval.write(name)\n    else:\n        ftrain.write(name)\n\nftrainval.close()\nftrain.close()\nfval.close()\nftest.close()\n直接复制以上代码即可\n```\n**然后运行 voc.py 文件**\n\n**运行成功的话 mian 文件夹里会多了四个 txt 文件**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020032320220362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**完成以上所有步骤，VOC 的处理就完成了**\n\n.\n\n**二、进行训练前的最后准备**\n\n**1、修改 `voc_annotation.py` 文件并运行**\n\n更改这里的  classes 的数量，你voc2007里标注了哪几种，你就留哪几种就行\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323203028861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n比如我的 voc 中只标注了 “person”，那我只留下“person”，然后再运行一下就行\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323203328943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n运行完成后会多出这几个 txt 文件\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323213806877.png)\n\n**2、修改 model_data**\n\n将 coco_classes.txt 和 voc_classes.txt 中也只留下VOC2007 中所标注的那个类型\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323203712506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n比如我标注的只有 “person”\n\n那我只留下“person”\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323203936905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323203955552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**3、修改 yolo3.cfg**\n\n大概在 610、696 和 783 行的位置，把 classes 的数值都改为 1\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323205031301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202003232052127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323205103807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**4、添加官方权重**\n\n按照上篇博文步骤进行的朋友应该下载好了 `yolov3.weights` 文件并转为了 `yolo.h5` 文件\n\n附上上篇博文的链接（里面有下载链接和转化方法）：[keras-yolov3目标检测详解——适合新手](https://blog.csdn.net/qq_45504119/article/details/105033492)\n\n将 `yolo.h5` 改名为 `yolo_weights.h5`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323213125140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323213046688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**5、新建 logs 文件夹存放训练的 权重文件**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020032321335393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**6、开始训练**\n\n在 `keras-yolo3-master` 文件夹下新建 一个名为 `trainyolo.py`  的文件\n\n为什么不用 源文件中的train.py呢？？（因为我运行的时候一直出现库的报错...建议按照我的方法来）\n\n`trainyolo.py` 的代码(直接复制即可)：\n\n```python\nimport numpy as np\nimport tensorflow as tf\nimport keras.backend as K\nfrom keras.layers import Input, Lambda\nfrom keras.models import Model\nfrom keras.optimizers import Adam\nfrom keras.callbacks import TensorBoard, ModelCheckpoint, ReduceLROnPlateau, EarlyStopping\nfrom yolo3.model import yolo_body\nfrom yolo3.model import yolo_loss\nfrom keras.backend.tensorflow_backend import set_session\nfrom yolo3.utils import get_random_data\n\ndef get_classes(classes_path):\n    '''loads the classes'''\n    with open(classes_path) as f:\n        class_names = f.readlines()\n    class_names = [c.strip() for c in class_names]\n    return class_names\n\ndef get_anchors(anchors_path):\n    '''loads the anchors from a file'''\n    with open(anchors_path) as f:\n        anchors = f.readline()\n    anchors = [float(x) for x in anchors.split(',')]\n    return np.array(anchors).reshape(-1, 2)\n\ndef data_generator(annotation_lines, batch_size, input_shape, anchors, num_classes):\n    '''data generator for fit_generator'''\n    n = len(annotation_lines)\n    i = 0\n    while True:\n        image_data = []\n        box_data = []\n        for b in range(batch_size):\n            if i==0:\n                np.random.shuffle(annotation_lines)\n            image, box = get_random_data(annotation_lines[i], input_shape, random=True)\n            image_data.append(image)\n            box_data.append(box)\n            i = (i+1) % n\n        image_data = np.array(image_data)\n        box_data = np.array(box_data)\n        y_true = preprocess_true_boxes(box_data, input_shape, anchors, num_classes)\n        yield [image_data, *y_true], np.zeros(batch_size)\n\ndef preprocess_true_boxes(true_boxes, input_shape, anchors, num_classes):\n\n    assert (true_boxes[..., 4]<num_classes).all(), 'class id must be less than num_classes'\n    \n    num_layers = len(anchors)//3 \n    anchor_mask = [[6,7,8], [3,4,5], [0,1,2]] if num_layers==3 else [[3,4,5], [1,2,3]]\n\n    true_boxes = np.array(true_boxes, dtype='float32')\n    input_shape = np.array(input_shape, dtype='int32') # 416,416\n    boxes_xy = (true_boxes[..., 0:2] + true_boxes[..., 2:4]) // 2\n    boxes_wh = true_boxes[..., 2:4] - true_boxes[..., 0:2]\n    true_boxes[..., 0:2] = boxes_xy/input_shape[:]\n    true_boxes[..., 2:4] = boxes_wh/input_shape[:]\n\n    m = true_boxes.shape[0]\n    grid_shapes = [input_shape//{0:32, 1:16, 2:8}[l] for l in range(num_layers)]\n    y_true = [np.zeros((m,grid_shapes[l][0],grid_shapes[l][1],len(anchor_mask[l]),5+num_classes),\n        dtype='float32') for l in range(num_layers)]\n    anchors = np.expand_dims(anchors, 0)\n    anchor_maxes = anchors / 2.\n    anchor_mins = -anchor_maxes\n    valid_mask = boxes_wh[..., 0]>0\n\n    for b in range(m):\n        wh = boxes_wh[b, valid_mask[b]]\n        if len(wh)==0: continue\n        wh = np.expand_dims(wh, -2)\n        box_maxes = wh / 2.\n        box_mins = -box_maxes\n\n        intersect_mins = np.maximum(box_mins, anchor_mins)\n        intersect_maxes = np.minimum(box_maxes, anchor_maxes)\n        intersect_wh = np.maximum(intersect_maxes - intersect_mins, 0.)\n        intersect_area = intersect_wh[..., 0] * intersect_wh[..., 1]\n        box_area = wh[..., 0] * wh[..., 1]\n        anchor_area = anchors[..., 0] * anchors[..., 1]\n        iou = intersect_area / (box_area + anchor_area - intersect_area)\n        best_anchor = np.argmax(iou, axis=-1)\n\n        for t, n in enumerate(best_anchor):\n            for l in range(num_layers):\n                if n in anchor_mask[l]:\n                    i = np.floor(true_boxes[b,t,0]*grid_shapes[l][1]).astype('int32')\n                    j = np.floor(true_boxes[b,t,1]*grid_shapes[l][0]).astype('int32')\n                    k = anchor_mask[l].index(n)\n                    c = true_boxes[b,t, 4].astype('int32')\n                    y_true[l][b, j, i, k, 0:4] = true_boxes[b,t, 0:4]\n                    y_true[l][b, j, i, k, 4] = 1\n                    y_true[l][b, j, i, k, 5+c] = 1\n\n    return y_true\n\n\nconfig = tf.ConfigProto()\nconfig.gpu_options.allocator_type = 'BFC'\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.7\nconfig.gpu_options.allow_growth = True\nset_session(tf.Session(config=config)) \n\nif __name__ == \"__main__\":\n    annotation_path = '2007_train.txt'\n    classes_path = 'model_data/voc_classes.txt'    \n    anchors_path = 'model_data/yolo_anchors.txt'\n    weights_path = 'model_data/yolo_weights.h5'\n    class_names = get_classes(classes_path)\n    anchors = get_anchors(anchors_path)\n    num_classes = len(class_names)\n    num_anchors = len(anchors)\n    log_dir = 'logs/'\n    input_shape = (416,416)\n\n    K.clear_session()\n\n    image_input = Input(shape=(None, None, 3))\n    h, w = input_shape\n\n    print('Create YOLOv3 model with {} anchors and {} classes.'.format(num_anchors, num_classes))\n    model_body = yolo_body(image_input, num_anchors//3, num_classes)\n    \n    print('Load weights {}.'.format(weights_path))\n    model_body.load_weights(weights_path, by_name=True, skip_mismatch=True)\n    \n    y_true = [Input(shape=(h//{0:32, 1:16, 2:8}[l], w//{0:32, 1:16, 2:8}[l], \\\n        num_anchors//3, num_classes+5)) for l in range(3)]\n\n    loss_input = [*model_body.output, *y_true]\n    model_loss = Lambda(yolo_loss, output_shape=(1,), name='yolo_loss',\n        arguments={'anchors': anchors, 'num_classes': num_classes, 'ignore_thresh': 0.5})(loss_input)\n\n    model = Model([model_body.input, *y_true], model_loss)\n\n    freeze_layers = 249\n    for i in range(freeze_layers): model_body.layers[i].trainable = False\n    print('Freeze the first {} layers of total {} layers.'.format(freeze_layers, len(model_body.layers)))\n\n    logging = TensorBoard(log_dir=log_dir)\n    checkpoint = ModelCheckpoint(log_dir + 'ep{epoch:03d}-loss{loss:.3f}-val_loss{val_loss:.3f}.h5',\n        monitor='val_loss', save_weights_only=True, save_best_only=False, period=2)\n    reduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=2, verbose=1)\n    early_stopping = EarlyStopping(monitor='val_loss', min_delta=0, patience=6, verbose=1)\n\n    val_split = 0.2\n    with open(annotation_path) as f:\n        lines = f.readlines()\n    np.random.seed(10101)\n    np.random.shuffle(lines)\n    np.random.seed(None)\n    num_val = int(len(lines)*val_split)\n    num_train = len(lines) - num_val\n    \n    if True:\n        model.compile(optimizer=Adam(lr=1e-3), loss={\n            'yolo_loss': lambda y_true, y_pred: y_pred})\n\n        batch_size = 1\n        print('Train on {} samples, val on {} samples, with batch size {}.'.format(num_train, num_val, batch_size))\n        model.fit_generator(data_generator(lines[:num_train], batch_size, input_shape, anchors, num_classes),\n                steps_per_epoch=max(1, num_train//batch_size),\n                validation_data=data_generator(lines[num_train:], batch_size, input_shape, anchors, num_classes),\n                validation_steps=max(1, num_val//batch_size),\n                epochs=50,\n                initial_epoch=0,\n                callbacks=[logging, checkpoint])\n        model.save_weights(log_dir + 'trained_weights_stage_1.h5')\n\n    for i in range(freeze_layers): model_body.layers[i].trainable = True\n\n    if True:\n        model.compile(optimizer=Adam(lr=1e-4), loss={\n            'yolo_loss': lambda y_true, y_pred: y_pred})\n\n        batch_size = 1\n        print('Train on {} samples, val on {} samples, with batch size {}.'.format(num_train, num_val, batch_size))\n        model.fit_generator(data_generator(lines[:num_train], batch_size, input_shape, anchors, num_classes),\n                steps_per_epoch=max(1, num_train//batch_size),\n                validation_data=data_generator(lines[num_train:], batch_size, input_shape, anchors, num_classes),\n                validation_steps=max(1, num_val//batch_size),\n                epochs=100,\n                initial_epoch=50,\n                callbacks=[logging, checkpoint])\n        model.save_weights(log_dir + 'last1.h5')\n\n```\n然后运行`trainyolo.py` 的代码\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020032321563349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**成功开始训练，训练时间比较长，需要耐心等待**\n\n.\n.\n## 训练完成：\n因为我的电脑配置比较差，所以训练了很长很长时间，这是我前几天训练的结果\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323220016562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n训练好的权重都放在 logs 文件夹下的 000 文件夹里：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323220244528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n按理说训练会经过两个阶段，且自动从一堆 loss 中选则出 loss最低的文件(应该是 earlystop函数的作用)：\n\n应该就是下面的框选的这两个 h5文件，都可以使用\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323220350578.png)\n\n使用的方法就和前面那篇博文操作一样了（用这个h5权重模型去识别自己图片），下面给大家展示一下我训练的模型的结果吧\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323221119292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323221200911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n对比使用官方的权重文件来说，我的模型可以仅仅识别出图片中的人体，而且识别效果还不赖，感觉还不错吧  哈哈哈\n\n## 总结：\n以上过程皆为刚刚我亲自操作，全程没有任何问题\n\n如果有朋友对这篇文章的任何内容感到不明白的请及时评论提出问题，我怕时间一久我也会忘，想要资料的直接评论你们的联系方式就行，我有时间会回复的。\n\n这个暂时告一段落，接下来我会在 matlab 中找一些算法去实现同样的功能，有兴趣的朋友可以评论一下一起探讨。\n\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"python绝对兼容的库配置——机器学习","url":"/posts/37357/","content":"先给大家推荐一个：[深度学习环境兼容性配置](https://docs.floydhub.com/guides/environments/)\n\n接下来记录一下我的 python 库的版本，以免以后我自己搞错了...\n<!--more-->\n```c\nPackage                            Version\n---------------------------------- -----------\n-eras                              2.2.0\nabsl-py                            0.9.0\nalabaster                          0.7.10\nanaconda-client                    1.6.14\nanaconda-navigator                 1.8.7\nanaconda-project                   0.8.2\nasn1crypto                         0.24.0\nastor                              0.8.1\nastroid                            1.6.3\nastropy                            3.0.2\nattrs                              18.1.0\nBabel                              2.5.3\nbackcall                           0.1.0\nbackports.shutil-get-terminal-size 1.0.0\nbackports.weakref                  1.0rc1\nbeautifulsoup4                     4.6.0\nbitarray                           0.8.1\nbkcharts                           0.2\nblaze                              0.11.3\nbleach                             1.5.0\nbokeh                              0.12.16\nboto                               2.48.0\nBottleneck                         1.2.1\ncertifi                            2019.11.28\ncffi                               1.11.5\nchardet                            3.0.4\nclick                              6.7\ncloudpickle                        0.5.3\nclyent                             1.2.2\ncolorama                           0.3.9\ncomtypes                           1.1.4\nconda                              4.8.3\nconda-build                        3.10.5\nconda-package-handling             1.6.0\nconda-verify                       2.0.0\ncontextlib2                        0.5.5\ncryptography                       2.8\ncycler                             0.10.0\nCython                             0.28.2\ncytoolz                            0.9.0.1\ndask                               0.17.5\ndatashape                          0.5.4\ndecorator                          4.3.0\ndistributed                        1.21.8\ndocutils                           0.14\nentrypoints                        0.2.3\net-xmlfile                         1.0.1\nfastcache                          1.0.2\nffmpeg                             1.4\nfilelock                           3.0.4\nFlask                              1.0.2\nFlask-Cors                         3.0.4\ngast                               0.2.2\ngevent                             1.3.0\nglob2                              0.6\ngreenlet                           0.4.13\ngrpcio                             1.27.2\nh5py                               2.8.0\nheapdict                           1.0.0\nhtml5lib                           0.9999999\nidna                               2.6\nimageio                            2.3.0\nimagesize                          1.0.0\nipykernel                          4.8.2\nipython                            6.4.0\nipython-genutils                   0.2.0\nipywidgets                         7.2.1\nisort                              4.3.4\nitsdangerous                       0.24\njdcal                              1.4\njedi                               0.12.0\nJinja2                             2.10\njsonschema                         2.6.0\njupyter                            1.0.0\njupyter-client                     5.2.3\njupyter-console                    5.2.0\njupyter-core                       4.4.0\njupyterlab                         0.32.1\njupyterlab-launcher                0.10.5\nKeras                              2.2.4\nKeras-Applications                 1.0.8\nKeras-Preprocessing                1.1.0\nkiwisolver                         1.0.1\nlabelImg                           1.8.3\nlazy-object-proxy                  1.3.1\nllvmlite                           0.23.1\nlocket                             0.2.0\nlxml                               4.2.1\nMarkdown                           3.1.1\nMarkupSafe                         1.0\nmatplotlib                         2.2.2\nmccabe                             0.6.1\nmenuinst                           1.4.14\nmistune                            0.8.3\nmkl-fft                            1.0.0\nmkl-random                         1.0.1\nmore-itertools                     4.1.0\nmpmath                             1.0.0\nmsgpack-python                     0.5.6\nmultipledispatch                   0.5.0\nnavigator-updater                  0.2.1\nnbconvert                          5.3.1\nnbformat                           4.4.0\nnetworkx                           2.1\nnltk                               3.3\nnose                               1.3.7\nnotebook                           5.5.0\nnumba                              0.38.0\nnumexpr                            2.6.5\nnumpy                              1.18.2\nnumpydoc                           0.8.0\nodo                                0.5.1\nolefile                            0.45.1\nopencv-contrib-python              4.2.0.32\nopenpyxl                           2.5.3\npackaging                          17.1\npandas                             0.23.0\npandocfilters                      1.4.2\nparso                              0.2.0\npartd                              0.3.8\npath.py                            11.0.1\npathlib2                           2.3.2\npatsy                              0.5.0\npep8                               1.7.1\npickleshare                        0.7.4\nPillow                             5.1.0\npip                                20.0.2\npkginfo                            1.4.2\npluggy                             0.6.0\nply                                3.11\nprompt-toolkit                     1.0.15\nprotobuf                           3.11.4\npsutil                             5.4.5\npy                                 1.5.3\npycodestyle                        2.4.0\npycosat                            0.6.3\npycparser                          2.18\npycrypto                           2.6.1\npycurl                             7.43.0.5\npyflakes                           1.6.0\nPygments                           2.2.0\npylint                             1.8.4\npyodbc                             4.0.23\npyOpenSSL                          18.0.0\npyparsing                          2.2.0\nPyQt5                              5.14.1\nPyQt5-sip                          12.7.1\nPySocks                            1.6.8\npytest                             3.5.1\npytest-arraydiff                   0.2\npytest-astropy                     0.3.0\npytest-doctestplus                 0.1.3\npytest-openfiles                   0.3.0\npytest-remotedata                  0.2.1\npython-dateutil                    2.7.3\npytz                               2018.4\nPyWavelets                         0.5.2\npywin32                            223\npywinpty                           0.5.1\nPyYAML                             3.12\npyzmq                              17.0.0\nQtAwesome                          0.4.4\nqtconsole                          4.3.1\nQtPy                               1.4.1\nrequests                           2.18.4\nrope                               0.10.7\nruamel-yaml                        0.15.35\nscikit-image                       0.13.1\nscikit-learn                       0.19.1\nscipy                              1.4.1\nseaborn                            0.8.1\nSend2Trash                         1.5.0\nsetuptools                         39.1.0\nsimplegeneric                      0.8.1\nsingledispatch                     3.4.0.3\nsix                                1.11.0\nsnowballstemmer                    1.2.1\nsortedcollections                  0.6.1\nsortedcontainers                   1.5.10\nSphinx                             1.7.4\nsphinxcontrib-websupport           1.0.1\nspyder                             3.2.8\nSQLAlchemy                         1.2.7\nstatsmodels                        0.9.0\nsympy                              1.1.1\ntables                             3.4.3\nTBB                                0.1\ntblib                              1.3.2\ntensorboard                        1.12.2\ntensorflow                         1.12.0\ntensorflow-base                    0.0.0.post2\ntensorflow-gpu\t\t\t\t\t   2.1.0\t\ntermcolor                          1.1.0\nterminado                          0.8.1\ntestpath                           0.3.1\ntoolz                              0.9.0\ntornado                            5.0.2\ntqdm                               4.43.0\ntraitlets                          4.3.2\ntyping                             3.6.4\nunicodecsv                         0.14.1\nurllib3                            1.22\nwcwidth                            0.1.7\nwebencodings                       0.5.1\nWerkzeug                           0.14.1\nwheel                              0.31.1\nwidgetsnbextension                 3.2.1\nwin-inet-pton                      1.0.1\nwin-unicode-console                0.5\nwincertstore                       0.2\nwrapt                              1.10.11\nxlrd                               1.1.0\nXlsxWriter                         1.0.4\nxlwings                            0.11.8\nxlwt                               1.3.0\nzict                               0.1.3\n```\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"labelimg使用方法：如何标注图片","url":"/posts/50785/","content":"labelimg 是一款专门用于贴标签的软件\n## 如何下载 labelimg：\n**1、anaconda 中下载：**\n\n```bash\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple labelimg\n```\n因为我下载过了，所以显示：`Requirement already satisfied`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322230932469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n直接输入：`labelimg` 就可以自动打开软件了\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322231120752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322231210131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**2、百度网盘**\n\n链接：https://pan.baidu.com/s/1NdnzpFNzlkdmenjTrZ52rg \n提取码：42hd \n\n## 如何使用：\n我创建了一个文件夹：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322235526602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**1、把想要标注的图片放入 `JPEGImages` 文件夹中**\n\n这里我放入三张图片\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322235854887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**2、在 labeling 中打开图片**\n\n点击 **Open Dir** 选择刚刚保存图片的路径\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323000031902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n选择路径 `JPEGImages`，点击选择文件夹\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323000249726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n就会出现文件夹中的图片\n\n**3、设置图片 xlm 文件的保存位置**\n\n点击  `Change Save Dir` ，选择文件夹 `Annotations` 用于储存标注的信息\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323000700377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**4、开始标注图片**\n\n**（1）在 **view** 中选中 `Auto Save model`**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323000933697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**（2）点击 `Create\\nRectBox`** **将所标注位置选中**\n（我这里标注人）\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323002355421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n在弹出的框中填入你对框中类别的定义，点击 OK\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323002520970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n右侧就会出现填入的类别，这里有个小技巧，比如说我的所有图片我只标注一类（只标注人），那么我选中 `Use default label` 并填入 person，那么我接下来所有框住的定义自动变为 person。不用每次选都去填入定义了。\n\n然后再选中 `Create\\nRectBox` 将图中其他人框中\n\n按键盘的 “A”或“D” 键就可以换图片进行标注\n\n>注意：有时候会默认选中 Save，那么就不用每张图片都点击一次save进行保存了，没默认的话就需要手动点击。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323003312324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**3、查看结果**\n\n打开文件夹 `Annotations`，就能发现刚刚那张图的信息都保存在了这里\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200323003436439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\nlabelimg 的使用就是这样，如有问题，可以评论啦","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"教女友学会keras-yolov3目标检测详解——适合新手","url":"/posts/12478/","content":">现在网上能找到的博客我现在看起来很明白，虽然讲的很详细，但是对于几天前的我真的看不明白，因为新手会遇到各种各样毫无征兆的问题，所以我决定写一篇面向新手的如何去使用 yolo 和如何去做自己的数据集来训练属于自己的模型。因为我也是新手，所以不说原理，只谈操作方法。\n\n>2020/5/30：\n> 近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要1元钱，但是进群后我会将钱退还给大家，只是为了过滤一些不好的人。\n\n>因为东西很杂，我会把小东西分出去写，并且在本文中附上链接。\n<!--more-->\n\n\n## 一、准备工作\n\n## 1、事件前言：\n简单介绍下情况，本人本科二年级，机器学习小白，操作系统:windows10\n\n前阵子用 matlab 做图像识别项目时发现了 yolov3 算法，觉得很有意思，但是无奈当时还没有基于matlab 的版本（听说现在有了），所以就用 python 运行，我的电脑里有 python_3.7、anaconda_3.6、pycharm。\n\n有心人应该可以发现我大概几天前的博客都是在凌晨一点发的，当时几乎每天都弄到凌晨三点多去配置环境（新手运行报错的原因几乎都是版本的兼容性问题）。\n\n\n不过经过三天左右的时间，我解决了无穷多的报错之后，终于把 yolo 在 anaconda 和 pycharm 中成功运行，而且在昨晚 10：30分 成功训练出了自己标注的数据集的模型。\n\n所以在接下来的几天，我会站在新手的层面上解释我使用 yolo 的过程。\n\n## 2、需要的文件：\n**1、yolov3源代码：**[github_keras-yolo3](https://github.com/qqwweee/keras-yolo3)\n\n**2、权重文件：**[官网_yolov3.weights](https://pjreddie.com/media/files/yolov3.weights) （点击直接下载）或者 我的百度网盘文件 链接：\n\n```c\nhttps://pan.baidu.com/s/1YD5dtSrEkcBO0PRHO7eLlw \n提取码：1uub \n```\n\n**3、python 或 anaconda 或 pycharm**\n注意：版本需要在3.7以下，3.7版本不支持 tensflow 的库\n\n## 3、python的环境配置：\n>很多的库之间都会存在兼容性问题，如果你运行中出现的报错不常见，或者一个错误接着一个错误，那么八成是配置的库存在兼容性问题，把库的版本换了就行\n\n\n下面介绍一下重要的需要配置的库的版本：\n|库名称|版本  |\n|--|--|\n|tensorflow-gpu|2.1.0|\n|keras  | 2.2.4 |\n| tensorflow (可有可无) |1.12.0  |\n|Pillow |5.1.0  |\n|matplotlib|2.2.2|\n|ffmpeg|1.4|\n|opencv|opencv-contrib-python|\n<!--more-->\n建议使用镜像源下载，下载的方法可以参照我的这篇博文：\n\n[anaconda 配置 yolov3 环境](https://blog.csdn.net/qq_45504119/article/details/104905471)（该文章中的版本也可以，但是最好换成我上面表格中写的）\n\n**大家也可以看下我的 python 的各个库的配置：**[python绝对兼容的库配置——机器学习](https://blog.csdn.net/qq_45504119/article/details/105039951)\n（建议大家保留一份，万一哪天不小心改了一个库的版本，很可能就会导致一系列的问题，这里的版本不存在兼容性问题）\n.\n.\n\n## 二、正式开始yolo之旅\n## 1、用官方权重识别图像\n接下来先教大家去用官方的权重文件 `yolov3.weights` 去识别图像\n\n先用 pycharm 或 spyder 打开 keras-yolo3 文件夹，用 pycharm 或 spyder 是为了看文件夹更方便，直接在 anaconda 里运行也是可以的\n\n这里用 pycharm 先演示一下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322220715900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n打开文件后是这样的。\n\n**1、我们将下载的 yolov3.weights 文件放在 keras-yolo3-master 文件夹下：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322221122948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**2、把 yolov3.weights 文件转换成 keras 适用的 h5 文件**\n\n首先点击左下方的 Terminal (和IDLE一个功能，就是命令行) \n\n输入 `python convert.py yolov3.cfg yolov3.weights model_data/yolo.h5`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322221429827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322221927751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n等待一会。。。直到命令行显示 `Saved Keras model to model_data/yolo.h5`\n\n就可以看到文件夹的 model_data 中多了个 yolo.h5 文件\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322222041524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**3、在文件夹下添加一个启动 yolo 函数的代码**\n\n在文件夹下新建一个py文件，我取名为 `yolostart.py` ，代码如下：\n\n```bash\nfrom yolo3.model import yolo_body\nfrom keras.layers import Input\nfrom yolo import YOLO\nfrom PIL import Image\n\nyolo = YOLO()\n\nwhile True:\n    img = input('Input imagename:')\n    try:\n        image = Image.open(img)\n    except:\n        print('Open Error!')\n        continue\n    else:\n        rel_image = yolo.detect_image(image)\n        rel_image.show()\nyolo.close_session()\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322223024230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**4、在文件夹下新建名为 img 的文件夹，里面放想要进行识别的图片**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322223335842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**5、运行 yolostart.py**\n\n运行 **yolostart.py** 文件\n\n提示：`Input imagename:`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322224256302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n现在输入想要识别的图片的文件路径，这里我输入 **img/q.jpg**(识别 img 文件夹下名为 q 的 jpg 格式的图片)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322224711804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322225005871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n成功识别出图上人物\n\n现在运行人数较多的图片试一下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322225150925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n## 2、训练自己的数据集模型\n>time：3/22\n>这篇先发，我学校的作业还没写，\n>我先把作业写了，再回来补下面的东西\n>。。。\n>见谅\n\n**Time：2020/3/23/22:19\n我回来啦：**\n\n介于训练自己的数据集模型比这篇文章的两倍还要长，我就将它化为一篇文章来写了，很详细，均是我刚刚亲自一步步操作的，有任何问题均可以提出\n\n**文章链接：**[keras-yolov3目标检测训练自己的模型详解](https://blog.csdn.net/qq_45504119/article/details/105052478)\n\n## 总结：\n文章中有任何问题都可以直接评论，我一般都在\n\n趁着我刚刚解决好多的报错，脑子里还有记忆的时候赶快问，我怕我时间久了没法回答你们一些很生僻的报错了。。。\n\n\n\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"python 使用镜像安装库时提示 Warning——已解决","url":"/posts/37819/","content":"\n## 事件起因：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200318014810411.png)\n\n看这张图，使用清华镜像时提示 warning：\n`Warning: 'https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/' already in 'channels' list, moving to the top`\n<!--more-->\n## 解决方法：\n在 C 盘的用户目录下找到 `.condarc` 文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200318015055134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n双击用记事本打开\n\n可以看到文件里有清华源的链接\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200318015226395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n直接删除链接：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200318015324793.png)\n\n>**记得把文件保存再关闭**\n> \n>**即可正常使用**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020031801543635.png)\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"module 'tensorflow' has no attribute 'get_default_graph'","url":"/posts/23428/","content":"参考：https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task\n## 事件经过：\n现在已经是凌晨一点半，从昨天下午开始在 windows 的 anaconda 配置 yolov3 的训练环境，一直出各种问题，很烦。\n\n两小时前遇到这个问题：\n`https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task`\n\n参照各种方法，tensorflow 和其他库删了再重新下载。\n<!--more-->\n## 报错原因：\n**直到看到上述的文章**\n\n使用keras和tensorflow做深度学习的时候，python3.6报了这个错误，这个问题源自于keras和TensorFlow的版本过高导致模块不存在或者已经更改不再兼容\n\n\n## 解决方法：\n先把 TensorFlow 和 keras 都卸载再重新安装\n\n```python\npip uninstall tensorflow  # 卸载tensorflow\npip uninstall keras  # 卸载keras\n```\n清华镜像下载：\n\n```bash\n# 下载 keras==2.0.9\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple keras==2.0.9\n# 下载 tensorflow==1.2.0\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow==1.2.0\n```\n\n## 感受：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200317012850971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n我的 yolov3配置文件成功转换成keras适用的h5文件了\n\n真的本来都想把 anaconda 卸载重新安装了\n\n多谢上述博主提供的方法\n\n这件事也显示了各个版本之间的 兼容 与 矛盾\n\n版本的选择真的很重要\n\n————————————————————————————————————\n如果有使用 yolov3 算法中遇到各种问题的朋友可以评论你的问题，我几乎把所有能遇到的问题都遇到了，应该可以给予帮助","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"anaconda安装 pytorch——详解","url":"/posts/43498/","content":"## 事件前言：\n\n今天凌晨2点多时清华镜像源还可以正常使用，但是刚刚我电脑却使用不了了\n\n>使用中科大、阿里云等国内镜像的时候，一直报错：\n>`Warning: 'https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/' already in 'channels' list, moving to the top`\n\n无奈我只能自己下载了\n\n[pytorch下载链接](https://download.pytorch.org/whl/torch_stable.html) <———点击这里进入网站\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316185114665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n## 下载方法：\n\n我需要下载两个文件： `torch-1.4` 和 `torchvision-0.4`\n\n**torch 我选择** `torch-1.4.0+cpu-cp36-cp36m-win_amd64.whl`\n（我的环境是 windows 下的 python3.6 ）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316185343599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**torchvision 我选择：**  `torchvision-0.4.2+cpu-cp36-cp36m-win_amd64.whl`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316185712114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n这个 whl 后缀的文件迅雷应该不能下载，所以等待谷歌慢慢下载吧\n\n## 安装：\n进入环境：\n\n>输入安装 torch 的命令：\n>pip install C:\\Users\\27511\\Desktop\\torch-1.4.0+cpu-cp36-cp36m-win_amd64.whl\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316190046223.png)\n\n>输入安装 torchvision 的命令：\n>pip install C:\\Users\\27511\\Desktop\\torchvision-0.4.2+cpu-cp36-cp36m-win_amd64.whl\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316190159196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n这样就安装成功了。\n\n注意：版本不能乱下载，不然可能会安装不了\n\n如果有同学对本文方法不明白的可以评论联系我。","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"运行sh文件报错：python3 command not found——已解决","url":"/posts/26136/","content":"我使用windows下的 anaconda 运行 sh 文件时报错：`python3: command not found`\n\n可是我就是在 anaconda 配置的 python3.6 环境下运行的 sh 文件啊\n\n网上没有找的任何有效的解决方法\n\n后来我打开 sh 文件看了下代码：\n（把 sh 后缀改成 txt 后缀就可以打开文件）\n<!--more-->\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316145609226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n发现框住的那一行代码不就是我们平时运行 py 文件的命令嘛\n\n所以我把它改成：`python -u train.py \\`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316145810476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n结果就可以正常运行了。\n\n我已经解决了问题，如果有对这种操作有任何问题的可以评论\n\n\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"anaconda 配置 yolov3 环境","url":"/posts/30986/","content":"## 1、 使用清华镜像创建环境\n输入：\n\n```python\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --set show_channel_urls yes\nconda create -n yolo python=3.6\n```\n(忽略图中因为打错字母导致的报错...)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316001002423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n## 2、进入yolo环境\n输入：\n\n```python\nconda activate yolo\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316001211529.png)\n## 3、更换pip源下载\n\n** 1、下载keras：**\n\n```python\n# 不更换国内源的命令\n# 超时失败是常有的事\npip install keras==2.1.5 \n# 更换国内源\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple keras==2.1.5\n# pip install -i// + 链接 + //keras==2.1.5（keras的版本）\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316003557394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**2、下载 tensorflow ：**\n\n```python\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow-gpu==1.6.0\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316004333255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**3、下载 Pillow**\n\n```python\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple Pillow\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020031600472232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**4、安装 matplotlib**\n\n```python\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple matplotlib\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316004849304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**5、下载 ffmpeg**\n\n```bash\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple ffmpeg\n```\n\n或\n```python\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\nconda config --set show_channel_urls yes\nconda install ffmpeg\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316005227363.png)\n**6、安装 opencv**\n\n```python\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple opencv-contrib-python\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200316005544144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n\n\n","categories":["python","机器视觉"],"tags":["python","机器视觉"]},{"title":"No command 'conda creat'——解决方法","url":"/posts/41404/","content":"在 anacond 中创建一个新的环境python3.6：\n\n>输入:\n> `conda create -n yolo python=3.6`\n>\n>报错：\n`CommandNotFoundError: No command 'conda creat'.\nDid you mean 'conda create'?`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200315230215285.png)\n<!--more-->\n## 原因：\n>可能是 conda 版本太高，降级即可：\n## 解决方案：\n**anacond 中输入：**\n\n```python\nconda install -n base conda==4.6.7\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200315230352988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**出现 `Proceed ([y]/n)?`**\n\n**输入：y**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200315230444682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**等待直到下载成功**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200315230542856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"Matlab如何打开c++文件","url":"/posts/16467/","content":"最近在尝试视觉分析的项目\n\n总是会遇到一些cpp文件需要在matlab中运行，在这里记录一下操作\n\n**1、命令行输入** ：`mex -setup`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200314231840100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n**2、我这里需要再选择语言的种类**\n\n点击 `mex -setup C++`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200314232025601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**3、运行 C 文件**\n\n输入 mex +文件名和后缀\n\n比如我这里需要运行名为 maxsubarray2D.cpp 的文件，\n\n所以我输入：`mex maxsubarray2D.cpp`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200314232301967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200314232508289.png)\n显示编译完成后就可以进行接下来的操作了。","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"Python的Scripts文件夹为空——已解决","url":"/posts/21501/","content":"如果有 windows 环境的 python 的话，很可能会出现 Scripts 文件夹为空，这样就无法正常在 cmd 正常使用 pip 命令。\n\n**解决方法：**\n\n cmd 中输入： `python -m ensurepip`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200313174634904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n文件夹下就出现 exe 文件\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200313174720149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n问题解决。\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"VLFeat工具包下载","url":"/posts/752/","content":"**vlfeat 官方下载链接：**[https://www.vlfeat.org/](https://www.vlfeat.org/)\n\n运用于计算机视觉算法专业图像的理解和局部特征提取和匹配。算法包括Fisher向量，VLAD，SIFT，MSER，k均值，分层k均值，聚集信息瓶颈，SLIC超像素，快速移位超像素，大规模SVM训练等。它是用C编写的，以提高效率和兼容性，并带有MATLAB的接口（易于使用）和详细的文档。\n\n点击直接下载压缩包，不过下载速度可能会有点慢,可以使用迅雷下载\n<!--more-->\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020031317311149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n这里是源代码和安装教程\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200313173258764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n**我的 vl_setup.m 文件的位置是：**\n\nD:\\MATLAB 2018a anzhuanglujing\\toolbox\\vlfeat-0.9.21-bin\\vlfeat-0.9.21\\toolbox\n\n所以命令行输入：\n\n```python\nrun('D:\\MATLAB 2018a anzhuanglujing\\toolbox\\vlfeat-0.9.21-bin\\vlfeat-0.9.21\\toolbox\\vl_setup.m')\n```\n即可使用 vlfeat 工具包\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200314234457223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"No module named 'pkg_resources'解决方法","url":"/posts/57821/","content":">No module named 'pkg_resources'\n\n我在安装 pip 时出现这种问题\n\n**解决方法:**\n\n```python\ncurl https://bootstrap.pypa.io/ez_setup.py | python\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311193145656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n等待 Downloading setuptools 完成后即可.\n\n\n\n\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"Python中 pip 的安装——windows系统","url":"/posts/6732/","content":"我的 Windows 环境下的 python 是没有 pip 文件的，所以想要实现 pip 命令就要手动安装pip 文件\n\n这篇和接下来的文章我会演示　windows 系统下的 “IDLE” 安装 pip 可能遇到的所有问题\n\n\n**pip 20.0.2官方下载地址**：[https://pypi.org/project/pip/#description](https://pypi.org/project/pip/#description)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020031117175539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n点击 Download files下载 pip-20.0.2 tar.gz\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311171901315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n解压后找到 setup.py 所在文件夹的路径\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311172223338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n按\"win+ R\"输入 cmd\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311172503467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n输入 ：cd +setup.py 所在文件夹的路径\n\n我的路径为：\n>C:\\Users\\27511\\Desktop\\pip-20.0.2\\pip-20.0.2\n\n```python\ncd C:\\Users\\27511\\Desktop\\pip-20.0.2\\pip-20.0.2\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311172830673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n————————————————————————————————————\n按理说再输入 python setup.py install 就能完成安装\n\n```python\npython setup.py install\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311173048620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n但是我这里报错了：\n\n```python\nModuleNotFoundError: No module named 'setuptools'\n```\n这是很常遇见的错误提示，不用担心，这是因为Windows环境下Python默认是没有安装 setuptools 这个模块的，这也是一个第三方模块。\n\n**两种方法：**\n\n**1、setuptools 46.0.0官方下载链接：**[https://pypi.org/project/setuptools/](https://pypi.org/project/setuptools/)\n\n解压后复制 setuptools 文件放在 python 的安装路径下 Lib 文件夹里就行了。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311175701782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311175919678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n安装了setuptools之后，再运行“python setup.py install”就可以了。\n\n**2、脚本链接：**[https://bootstrap.pypa.io/ez_setup.py](https://bootstrap.pypa.io/ez_setup.py)\n\n\n直接复制代码在IDLE中运行，会自动运行 exe ，识别python版本，自动下载setuptools 并安装。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200311174553858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n之后再重新python setup.py install运行就可以了\n\n```python\npython setup.py install\n```\n_____\n____\n____\n___\n___\n___\n介绍下可能出现的问题：\n|问题|解决方法  |\n|--|--|\n| 1、运行脚本后只下载了setuptools压缩包，没有自动安装 |  那就解压，复制 setuptools 文件放在 python 的安装路径下 Lib 文件夹里就行（上面有具体介绍）\n|2、运行 python setup.py install 后又出现其他 No module named ' ***'|再下载这种库的压缩包，复制相关文件放在 python 的安装路径下 Lib 文件夹里就行|\n\n如果有人接下来遇到各种各样的 No module named ' ***'\n\n那么可以参照我接下来的文章，或留言也可以\n\n因为我上文演示的 python 未安装任何多余的库\n\n接下来会继续解决所有的 No module named ' ***'  问题\n\n直到这个 IDLE 可以使用 pip 命令为止","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"教女朋友一周学会 python 爬虫_1","url":"/posts/24985/","content":"今天开始我将简单介绍一下网络爬虫，并开始带大家学习如何写爬虫\n\n**一、爬虫介绍**\n\n **1、什么是爬虫？**\n\n你可以把互联网想想成一个巨大的蜘蛛网，而爬虫就是一个小蜘蛛在网的各个节点中穿梭。   就像探测机器一样，基本操作就是模拟人去浏览各个网站，浏览数据，查看信息。\n<!--more-->\n **2、爬虫可以做什么？**\n\n**（1）抢火车票：**\n\n这应该是爬虫行业中使用量最大，很多抢票软件每秒对12306扫数千数万次。\n\n**（2）刷浏览量：**\n\n爬虫重灾区应该是微博无疑了，爬虫代码指向微博的某一个接口，可以获取用户的微博列表，微博动态，等等信息。\n\n有的人用爬虫指挥机器人，来打开某人的微博进行点赞、评论或留言。也就是微博上所谓的僵尸粉（去年某坤微博转发过亿次还记得吗）。\n\n\n还有很多更“好玩”的用处，这里就不废话了\n\n**二、正式开始学习**\n\n想写爬虫，首先要了解 URL：\n\n统一资源定位符（Universal Resource Locator），简单说就是表示资源的地址（我们说某个网站的网址就是 URL）。\n\n**1、urllib.request.urlopen（）函数**\n\n>**urllib 是一个软件包，收集了几个用于处理URL的模块 ：**\n>.\n>**urllib.request ： 用于打开和阅读URL**\n>.\n>**urllib.error ： 包含由引发的异常 urllib.request**\n>.\n>**urllib.parse ： 用于解析URL**\n>.\n>**urllib.robotparser ： 用于解析robots.txt文件**\n\n**urllib.request—用于打开URL的可扩展库**\n\t\t\n\n```python\nurllib.request.urlopen（url，data = None，[ timeout，] *，cafile = None，capath = None，cadefault = False，context = None ）\n##打开url，字符串或 Request 对象\n```\ndata：访问URL时传输的数据\n\ntimeout：参数以秒为单位，检测是否超时\n```python\n# Time：2020/03/11 1:07\n# environment:IDLE\n>>> import urllib.request\n>>> response=urllib.request.urlopen(\"http://www.baidu.com\")\n>>> type(response)\n<class 'http.client.HTTPResponse'>\n# 返回 HTTPResponse 类型数据\n```\n---\n**2、实例检测某网站的编码**\n\n\n```python\n>>> import chardet\n>>> import urllib.request\n>>> url = input('input address：')\n# 输入网址\n>>> response = urllib.request.urlopen(url)\n# urllib.request.urlopen信息传给response\n>>> infor = response.read()\n# 返回获取到的页面内容\n>>> encode = chardet.detect(infor)['encoding']\n>>>print(encode)\ninput address：http://www.baidu.com\nutf-8\n```\n---\n**3、检测网站状态**\n\n“200”则说明网站正常\n\n“404”就说明不正常\n\n```python\n>>> import urllib.request\n>>> response=urllib.request.urlopen(\"http://www.baidu.com\")\n>>> code=response.getcode()\n>>> print(code)\n200\n```\n\n----\n----\n---\n今天晚上一直看 LOL 直播，现在有点撑不住了，都凌晨一点半了\n\n早起还要上网课\n\n上完网课再更","categories":["python","爬虫"],"tags":["python","爬虫"]},{"title":"Python安装 chardet","url":"/posts/61970/","content":"Chardet：通用字符编码检测器\n\nchardet 3.0.4官网链接[https://pypi.org/project/chardet/#files](https://pypi.org/project/chardet/#files)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200309201404769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n下载--->解压文件后，找到chardet文件夹\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200309203606459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n复制在python的安装路径下的 Lib 文件夹内即可\n\n部分同学的 Lib 文件夹下有 site-packages 文件夹，则最好将 chardet 复制在 site-packages 文件夹内\n\npycharm 和 anaconda 都可以这样安装（不会使用 pip 的同学）\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200309204210131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n然后 chardet 就可以正常使了\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030921003628.png)\n","categories":["python","error&库"],"tags":["python","error&库"]},{"title":"Python学习笔记_9：class 类定义的属性与方法——详解","url":"/posts/25323/","content":"对很多没有其他语言基础的初学者来说，可能学到 python 的类定义的时候会苦恼很久\n\n但，无论我们遇到什么困难，也不要怕，微笑着面对他，消除恐惧的最好办法就是面对恐惧，坚持，才是胜利，加油，奥利给！！！\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308134728646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n今天就给大家浅谈一下 class 中遇到的小问题吧\n\n**1、首先类的对象是什么时候产生的？**\n\n当类被定义完成时，类定义就变成了类的对象，可以通过 “类名.属性” 或 “类名.方法名()”  引用或使用相关的属性或方法\n\n```python\n>>> class I:\n    \tdef text(self,x):\n        \tprint('%d'%(x**2))\n>>> O = I()\n>>> O.text\n<bound method I.text of <__main__.I object at 0x0000018820ABCB38>>\n>>> O.text(3)\n9\n```\n**2、类的属性可以将类的方法覆盖**\n当给 O.text 赋值时，O.text(obj) 就会报错，因为 O.text 将 O.text()  覆盖\n\n```python\n>>> class I:\n    \tdef text(self,x):\n        \tprint('%d'%(x**2))\n>>> O = I()\n>>> O.text(4)\n16\n>>> O.text = 5\n>>> O.text(4)\nTraceback (most recent call last):\n  File \"<pyshell#11>\", line 1, in <module>\n    O.text(4)\nTypeError: 'int' object is not callable\n>>> O.text\n5\n```\n**3、注意类属性和实例属性的区别**\n\n```python\n>>> class I:\n\t\tcount = 1\n\t\tdef text(self)\n\t\t\tself.a = 2\n\t\t\tself.b = 3\n\t\t\tself.c = 4\n\t\t\tI.num = 5\n```\ncount 和num 就是类属性（静态变量），a,b,c则是实例属性\n\n4、Error——传参错误\n\n```python\n>>> class I:\n    \tdef text():\n        \tprint('abc')\n>>> O = I()   %默认将O的值传给I(),作为I() 的参数\n>>> O.text()\nTraceback (most recent call last):\n  File \"<pyshell#20>\", line 1, in <module>\n    O.text()\nTypeError: text() takes 0 positional arguments but 1 was given\n```\n因为python中的 “类.obj（）” 需要实例才可以使用，上述代码中python 就会默认将O的值传给 I() ，所以再调用 O.text() 时就是报错\n\n```python\nTypeError: text() takes 0 positional arguments but 1 was given\n%需要0个参数，但是已经传入1个参数\n```\n所以应该在 def text() 加入实例对象\n\n```python\n>>> class I:\n    \tdef text(obj):\n        \tprint('abc')\n>>> O = I()   \n>>> O.text()\nabc\n```\n","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python 官方的中文文档","url":"/posts/43900/","content":"今天打开Python documentation 查阅函数使用方法，像往常一样，我打开了百度翻译\n\n突发奇想，要不上网找找有没有哪位大佬翻译好的中文文档，发现python官网上竟然发布了python的中文文档....(python初学者表示之前真的不知道)\n\nPython官方文档链接：[https://docs.python.org/zh-cn/3/](https://docs.python.org/zh-cn/3/)\n<!--more-->\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307155243677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n其中包含了从2.7到3.8各个版本的文档\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307155833344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n\n这里是标准库的各个模块\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307155939236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n以 difflib 为例\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307160024922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n_____\n\n哈哈哈哈哈，以后再也不用担心看不懂英文了\n\n可以硬气的关闭“百度翻译”了","categories":["python","入门"],"tags":["python"]},{"title":"Python学习笔记_8：set 函数的使用方法","url":"/posts/56883/","content":"前面我们介绍了python的列表，元组，dict。\n\n\nset就是我们所说的集合\n\n今天介绍一下set 函数的基本用法:\n\n**1、set的使用方法**\n\n```python\n>>> I = set([3,5,2,1,4])\n>>> print(I)\n{1, 2, 3, 4, 5}\n%set会自动将数字排序\n```\n<!--more-->\n**2、set自动合并相同元素**\n\n```python\n>>> I = set([5,2,3,5,2])\n>>> print(I)\n{2,3,5}\n```\n**3、集合中元素是无序的**\n\n```python\n>>> I = set([1,2,3,4,5])\n>>> I[1]\n%%就会报错\nTraceback (most recent call last):\n  File \"<pyshell#14>\", line 1, in <module>\n    I[1]\nTypeError: 'set' object does not support indexing\n```\n**4、集合 set 增减元素**\n\n```python\n>>> I.add(5)\n>>> I\n{1, 2, 3, 4, 5}\n>>> I.remove(5)\n>>> I\n{1, 2, 3, 4}\n```\n","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python学习笔记_7：index() 和 dict() 的用法详解","url":"/posts/32939/","content":"前面的笔记中我详细介绍了列表和元组\n\n**当我们需要列表中某一元素的相应位置时**\n\n就要提到 **index()** 这个神奇的函数了\n## 混讲一下 index() 和 dict()\n**1、index() 的简单用法：**\n\n```python\n>>> I = ['东北大鹌鹑','周淑怡','刘某人','胡歌']\n>>> print(I.index('胡歌'))\n3\n```\n<!--more-->\n所以 index 可以直接输出该元素的位置。\n\n**2、今天要说的 index() 的用法跟 dict() 函数有点关系，index 在有时候可以代替 dict 函数去实现字典的功能：**\n\n**先简单介绍一下 dict() 函数：**\n\n```python\n###首先我给四人每个人一个定义###\n%东北大鹌鹑-->小胖子\n%周淑怡------>大美女\n%刘某人------>反向抽烟\n%胡歌-------->艺术家\n>>> I = dict((('东北大鹌鹑','小胖子'),('周淑怡','大美女'),\\\n\t\t\t ('刘某人','反向抽烟'),('胡歌','艺术家')))\n>>> print(I['周淑怡'])\n大美女\n>>> print(I['刘某人'])\n反向抽烟\n```\n所以 dict ( obj ) 会返回 obj 的定义\n\n**3、用 index() 来实现上述操作：**\n\n```python\n>>> people = ['东北大鹌鹑','周淑怡','刘某人','胡歌']\n>>> mapping = ['小胖子','大美女','反向抽烟','艺术家']\n>>> print('周淑怡是%s' %(mapping[people.index('周淑怡')]))\n周淑怡是大美女\n>>> print('胡歌是%s' %(mapping[people.index('胡歌')]))\n胡歌是艺术家\n```\n\n**总结：**\n本来是想把 dict() 函数单独详细的说一下，但是写文章的时候突然想起来 index() 在这种情况下可以代替 dict() 的用法，而且 dict() 也比较简单，就在这里一起介绍了。\n","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python学习笔记_6：global 与 nanlacal 的区别","url":"/posts/45048/","content":"之前我在 matlab 的笔记里介绍过一次 global 的用法\n\n这次在 python 中介绍下 global 和 nanlacal 的区别\n\n**global 函数：**\n\n在函数中修改全局变量\n\n```python\n>>> I = 'ABC'\n>>> def fun():\n\t\tglobal I\n\t\tI = '123'\n\t\tprint(I)\n>>> fun()\n>>> print(I)\n%输出为\n123\n123\n```\n<!--more-->\n运行 fun() 函数时，global 函数将全局变量 I = ‘ABC’ 修改为 I = ‘123’，并覆盖原先的全局变量 I 的值。\n\n\n**nonlocal 函数：**\n\n在函数中的内部函数中，修改其外部函数中定义的局部变量\n\n```python\n先看一份例子，稍后我们使用nonlocal来修改\n>>> I = '东北大鹌鹑'\n>>> def fun():\n    \tI = 'PDD'\n    \tdef function():\n        \tI = '周淑怡'\n        \tprint(I)\n    \tfunction()\n    \tprint(I)\n>>> fun()\n>>> print(I)\n%输出是%\n周淑怡\nPDD\n东北大鹌鹑\n```\n而我现在把 ’PDD‘ 也换成 ’周淑怡‘ ，就要使用nonlocal函数了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200306152352813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n```python\n>>> I = '东北大鹌鹑'\n>>> def fun():\n    \tI = 'PDD'\n    \tdef function():\n\t        nonlocal I\n        \tI = '周淑怡'\n        \tprint(I)\n    \tfunction()\n    \tprint(I)\n>>> fun()\n>>> print(I)\n%输出为\n周淑怡\n周淑怡\n东北大鹌鹑\n```\nPDD：你怎么把我给整没了呢？？？\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200306152038752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n哈哈哈哈，皮一下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200306152417290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n从上面的例子可以看到：\n\n我们一般在某函数的内部函数中使用 nonlocal 函数来修改这个函数的局部变量，而不会改变整个代码的全局变量，nonlocal 用途还算比较广泛的。\n","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python学习笔记_5：字符串格式化符号及进制转换","url":"/posts/22649/","content":"介绍下经常用得到的格式化字符\n```python\n%c\t：格式化字符及其ASCII码\n%s\t：格式化字符串\n%d\t：格式化整数\n%f\t：可指定小数点精度\n%e\t：用科学计数法表示小数\n%g\t：根据值的的具体情况使用%f或%e\n%o\t：八进制\n%x\t：十六进制\n```\n<!--more-->\n----------\n简单的进制转换：\n1、十六进制转换\n```python\n>>> I = input('请输入一个数')\n>>> I = int(I)\n>>> print('%x' %I)\n```\n2、八进制转换\n\n```python\nI = input('请输入一个数')\nI = int(I)\nprint('%o' %I)\n```\n3、二进制转换\n\n```python\n%%% python 中的二进制可以直接用 bin() 函数处理\nI = input('请输入一个数')\nI = int(I)\nprint(bin(I))\n```","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python学习笔记_4列表和元组的区别","url":"/posts/44475/","content":"上节我主要详细的介绍了一下列表的用法\n\n突然想起来需要说一下列表和元组的区别,所以这篇文章就简洁点,以文字为主\n\n**列表:存放的是暂时的元素,可以更改,增添**\n\n**元组:存放的是不可更改的元素,不可删除,不可添加,不可修改**\n<!--more-->\nlist ( [ string ] )：将 str 转化为列表\n\n```python\n>>> exmp = 'abcd efgh'\n>>> list(exmp)\n输出为\n['a', 'b', 'c', 'd', ' ', 'e', 'f', 'g', 'h']\n```\n\ntuple ( [ string ] )：将 str 转化为元组\n\n```python\n>>> exmp = 'abcd efgh'\n>>> tuple(exmp)\n输出为\n('a', 'b', 'c', 'd', ' ', 'e', 'f', 'g', 'h')\n```\n\n当我们的项目中需要一些永远不用更改的数据,那就用元组\n\n如果我们需要后期维护并修改时就用列表\n\n但是在一定条件下我们需要改变元组中的数据或者增添一些新元素难道就没办法了嘛?\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200304212858622.png)\n\n当然不是,我们可以新建一个元组来代替原来的元组啊....是不是方法很沙雕\n\n不过在这里要说一个关于在元组之中添加元素的方法\n\n比如要在下列元组的'B''E'中添加'C''D'\n\n```python\n>>> I = ('A','B','E','F')\n>>> I = I[0:2]+('C','D')+I[2:]\n>>> print(I)\n输出为\n('A', 'B', 'C', 'D', 'E', 'F')\n```\n这样如果在遇到紧急需要处理的问题时能省事的解决\n\n但如果真的要对元组改动太大\n\n那只能新建一个元组了,所以我们一般不太会使用元组。\n","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python学习笔记_3：python 列表的使用方法—详细","url":"/posts/36135/","content":"\n\n今天已经开始了第三个 python 的笔记了\n\n我想开始介绍一下列表的一些使用方法\n\n“列表”是什么？？\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200304181714958.png)\n\n其实就是C语言的数组,不知道为什么在python中有的人说列表有的人说数组\n<!--more-->\n这个数组中可以存放存放所有我们学过的数据类型，甚至是汉字、标点符号。\n\n```python\n>>> I = [123,'A','魔法师','!']\n>>> print(I)\n输出为\n[123, 'A', '魔法师', '!']\n```\n这里的 **I** 就是一个列表，需要注意一点，列表中的数据不用加引号，但字母与汉字、标点符号是要加引号的。\n\n\n而且列表中也可以添加列表：\n\n```python\n>>> M = [1,2,3]\n>>> I = [123,'A','魔法师','!']\n>>> print(I)\n输出为\n[123, 'A', '魔法师', '!', [1, 2, 3]]\n```\n![!\\[在这里插入图片描述\\](https://img-blog.csdnimg.cn/20200304182618958.png](https://img-blog.csdnimg.cn/20200304182739884.png)\n何止是有点意思，下面介绍列表的具体使用方法，更有意思嘞\n\n**1、向列表中增添元素**--------------------\n\n列表中增添元素可以用到三个函数：**append、extend、insert**\n\n**insert 是将元素插入任意位置**\n\n**而append 和 extend 都是在列表末尾增添元素**\n\n**但也有部分区别**\n\n**先介绍一下append 和 extend**\n```python\n>>> I = [123,'A','魔法师','!']\n>>> I.append(456)\n>>> print(I)\n输出为\n[123, 'A', '魔法师', '!', 456]\n----------------------------------\n>>> I = [123,'A','魔法师','!']\n>>> I.extend(456)\n>>> print(I)\n输出为\n[123, 'A', '魔法师', '!', 456]\n```\n——————————————————————————————\n而区别就在于如果添加的不是元素，而是一个新的列表的时候\n\n**append 直接添加一个内置列表；**\n\n**而 extend 是将列表中的元素分别添加进列表里：**\n\n```python\n>>> I = [123,'A','魔法师','!']\n>>> I.append(['456','ABC'])\n>>> print(I)\n输出为\n[123, 'A', '魔法师', '!', ['456', 'ABC']]\n--------------------------------------------\n>>> I = [123,'A','魔法师','!']\n>>> I.extend(['456','ABC'])\n>>> print(I)\n输出为\n[123, 'A', '魔法师', '!', '456', 'ABC']\n```\n****下面介绍 insert 的用法：****\n\n```python\n>>> I = ['A','B','D']\n>>> I.insert(2,'C')\n>>> print(I)\n输出为\n['A', 'B', 'C', 'D']\n--------------------------------------\n% insert 添加新的列表时和 append 差不多\n>>> I = ['A','B','D']\n>>> I.insert(2,['C','3'])\n>>> print(I)\n输出为\n['A', 'B', ['C', '3'], 'D']\n```\n用　X．insert　就可以解决一切添加列表元素的问题了\n\n**2、修改列表中的某个元素**----------------------\n\n```python\n>>> I = ['A','B',[['G','D'],'E'],'F'] %将G改为C \n>>> I[2][0][0] = 'C'\n>>> print(I)\n结果变成了\n['A', 'B', [['c', 'D'], 'E'], 'F'] \n%我们想要的样子\n```\n\n**3、对列表进行排序**---------------------\nsort 函数将列表的数字或字母进行顺序排列\n\n但列表中同时含有字母或数字时就会报错\n```python\n>>> I = ['A','C','D','F','E']\n>>> I.sort()\n>>> print(I)\n输出为\n['A', 'C', 'D', 'E', 'F']\n```\n还有一个好玩的函数 reverse ,可以将列表顺序颠倒\n\n```python\n>>> I = ['A','C','D','F','E',1,4,2]\n>>> I.reverse()\n>>> print(I)\n输出为\n[2, 4, 1, 'E', 'F', 'D', 'C', 'A']\n```\n\n-----------------------------------------------------\n到这里关于列表的常用使用函数基本都介绍了\n\n最近学校天天上网课,心好累,好难啊啊啊啊啊\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200304211049839.png)","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python学习笔记_2：判断str类型的函数","url":"/posts/57588/","content":"相信大家都喜欢表情包吧\n\n话说学习Python一定要坚持，持之以恒，万事开头难嘛\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030218253379.png)\n\n哈哈，稍微皮一下\n<!--more-->\n经过整理\n\n今天给大家介绍一下 python 中可以判断 str 类型的函数：\n\n1、isdigit： 判断 str 是否为数字 \n\n```python\n>>> I = '123'\n>>> print(I.isdigit())\n>>> if I.isdigit():\n>>>\t\tprint('yes')\n%输出结果为\nTrue\nyes\n```\n\n2、isalpha：判断 str 是否为字母\n\n```python\n>>> I = 'Abc'\n>>> print(I.isalpha())\n>>> if I.isalpha()\n>>> \tprint('yes')\n%输出结果为\nTrue\nyes\n```\n\n3、isalnum：判断 str 是否为字母或数字\n\n```python\n>>> I = 'A2c'\n>>> print(I.isalnum())\n>>> if I.isalnum()\n>>> \tprint('yes')\n%输出结果为\nTrue\nyes\n```\n4、islower：判断 str 是否为小写\n\n```python\n>>> I = 'abc'\n>>> print(I.islower())\n>>> if I.islower()\n>>> \tprint('yes')\n%输出结果为\nTrue\nyes\n```\n\n5、isupper：判断 str 是否为大写\n\n```python\n>>> I = 'ABC'\n>>> print()\n>>> if I.isupper()\n>>> \tprint('yes')\n%输出结果为\nTrue\nyes\n```\n\n6、istitle：判断 str 是否仅有首字母大写\n\n```python\n>>> I = 'Abc Def'\n>>> print()\n>>> if I.istitle()\n>>> \tprint('yes')\n%输出结果为\nTrue\nyes\n```\n\n7、isspace：判断 str 是否为空格符\n\n```python\n>>> I = ' '\n>>> print()\n>>> if I.isspace()\n>>> \tprint('yes')\n%输出结果为\nTrue\nyes\n```\n___\n____\n___\n\n\n看完梨泰院的第10集，心情复杂...唉\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302221055518.png)\n\n喝杯咖啡再回来继续更博文\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302220305485.png)","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"Python学习笔记_1：print中end的用法 print（‘’，end=''）","url":"/posts/54779/","content":"学了那么久的python，都没有过系统的总结一下知识点，所以我决定在这里出一次python知识点集合——Python学习笔记。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200302170928468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n哈哈哈哈，就当是自己随时可以查阅的笔记本了\n\n下面开始介绍第一知识点：\n\nprint 中 end 的用法：\n\n```python\n%先让输出两个 str\n%则两个 str 一定经过一次 print 的换行操作\n>>>print('ABC')\n>>>print('DEF')\nABC\nDEF\n```\n如果我加上 \"end\"\n\n```python\n>>>print('ABC',end ='') %这里的end中没有东西\n>>>print('DEF')\n%则结果为\nABCDEF\n%因为end的作用就是告诉print，将print自带\n的换行用end中指定的str代替\n```\n如果我将end中填入‘ ’空格\n\n```python\n>>>print('ABC',end =' ')\n>>>print('DEF')\nABC DEF\n```\n如果我指定end中为其他数\n\n```python\n>>>print('ABC',end ='123')\n>>>print('DEF')\nABC123DEF\n```\n\n ","categories":["python","语法笔记"],"tags":["python","语法笔记"]},{"title":"如何创建可直接修改后缀来改变格式的文档","url":"/posts/16389/","content":"程序员应该都知道，我们新建一个文本文档后\n\n可以直接改变文本的后缀来创建相应的文件\n\n最熟悉不过的就是 python 了，直接新建一个文本，‘txt’ 后缀改为 ‘py’\n\n再用IDLE打开再省事不过了\n\n但我今天重装系统后发现新建的文本不显示后缀，我也没法改：\n<!--more-->\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224174108439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n\n\n****在这里记录一下如何操作：**\n1、打开‘电脑’—>'查看'—>‘选项’**\n![](https://img-blog.csdnimg.cn/20200224174842735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**2、‘查看’—>取消选择'隐藏已知文件类型的拓展名'**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224175153420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n然后就可以正常操作了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224175553276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020022417560399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n请无视其他无关文件和字幕....\n请无视其他无关文件和字幕…\n请无视其他无关文件和字幕…\n(重要的无视说三遍！！！)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","categories":["win10"],"tags":["win10"]},{"title":"Python99道经典练习题答案","url":"/posts/33069/","content":"转载与百度文库：\n[https://wenku.baidu.com/view/bc745bdaf6ec4afe04a1b0717fd5360cbb1a8d16.html](https://wenku.baidu.com/view/bc745bdaf6ec4afe04a1b0717fd5360cbb1a8d16.html)","categories":["python","入门"],"tags":["python","入门练习题"]},{"title":"鱼C论坛小甲鱼Python课后题","url":"/posts/50744/","content":"```\n本人是从小甲鱼的python视频一步步过来的\n所以刚看到小甲鱼的课后题库就转载过来和大家分享\n如有侵权，请联系删除\n```\n\n\n之前python时就是学习的小甲鱼的课程\n\n现在看了那么多的教学视频，感觉还是小甲鱼的视频有点意思\n\n正定不失风趣，正经不失一丝**（看过小甲鱼视频的应该都懂，哈哈哈哈）\n\n刚刚在百度文库中看了小甲鱼的Python课后题总结，毕竟小甲鱼专门搞得课后题，正确率就比其他的整合的题目要准确很多：\n\n小甲鱼Python课后题百度文库：\n[https://wenku.baidu.com/view/84d437faf021dd36a32d7375a417866fb94ac067.html](https://wenku.baidu.com/view/84d437faf021dd36a32d7375a417866fb94ac067.html)\n\n","categories":["python","入门"],"tags":["python"]},{"title":"怎么下载网页在线视频","url":"/posts/51789/","content":"在线看视频多少会有些卡顿，所以就可以将视频先下载下来之后看\n\n但对我而言，大部分视频都是在线甚至很小众的\n\n单独拿B站等大型网站来说，我们可以使用“硕鼠”等\n\n复制需要下载的视频的链接，复制在这里就可以准备下载\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200223233143492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n但今天说的没有那么简单\n\n硕鼠这种软件毕竟可下载的网站数量有限\n\n像我今天遇到了无法用硕鼠直接下载的情况\n\n下面给大家详细介绍三种方法：\n\n**1、****拿谷歌浏览器来说，如果想下载视频，先要打开视频，打开开发者工具**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200223233748416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n选择”Network“—>”all“\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200223233938512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)最好按F5刷新一下界面，不然可以会导致加载的视频不完整：\n\n在界面中找到 Time 框中的时间随着真实秒数在变化的文件，一般为所有现实的文件中时间最长，size 最大的文件，则这个文件就是我们想要的文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200223234755761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n右键该文件——选择”Open in new tab“,再右键另存为就可以了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224100123975.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n这是第一种比较简单的方法。\n\n**2、****打开视频，右键点击画面空白处 选择”查看网页源代码“，再Ctrl+F 打开查找窗口。**\n\n因为我一直在学习韩语，所以这里以某韩语教学视频为例\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200223235957978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n输入\"url”,复制这些url后面的连接去迅雷直接搜索网站下载就ok了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224000136299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n**3、****这个方法就比较小众了，因为很多视频不会出现这种情况**\n\n有的视频的开发者工具打开后发现全部都是ts后缀的文件\n\n列表显示的都是分割过的文件，保存下来也只是1段1段的\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224000803175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n所以这时候就需要找到这些 ts 后缀的文件的缓存地址了\n\n打开新的标签页输入“chrome://version/”\n\n就可以知道这些 mp2t 文件被保存的位置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224001554297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n现在我为了接下来述说简单点，我把刚刚\n\n```java\nC:\\Users\\27511\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe\n```\n这个路径下的 mp2t 文件全部移到新的文件夹，名字就叫 CSDN\n我再建立一个新的文件夹，名字叫 CSDN2，两个文件夹都放在名为1的文件夹下面\n\n那么现在按win+R 输入 cmd 打开窗口输入：\n\n```java\ncopy /b  D:\\1\\CSDN D:\\1\\CSDN2\\new.mp4\n%copy /b  C:\\f\\  D:\\f\\new.ts\n%copy /b不能动\n%C：\\f\\ 是缓存的mp2y文件的位置\n%D：\\f\\是将mp2y合并后储存的位置\n%new是文件名，ts是文件后缀\n```\n给大家看一下CSDN文件夹\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224004637895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n现在在cmd中输入：\n\n```java\ncopy /b  D:\\1\\CSDN D:\\1\\CSDN2\\new.mp4\n%我这里保存为MP4格式，可以根据需要随意更改后缀\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202002240048274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224004856636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n而我的CSDN2文件夹中就有了MP4格式的视频文件了\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200224005006426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n这样就可以正常观看了。\n\n这几种方法均是我最近下载视频文件的终于到的可以解决问题的方法，基本所有的视频均可以解决。\n\n如有其他问题，可以联系我\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","categories":["win10"],"tags":["win10"]},{"title":"Win10自带的虚拟机如何打开—Hyper-v","url":"/posts/41206/","content":"作为一个程序员电脑里面怎么能没有安装虚拟机呢...\n\n我之前装的虚拟机是VMware，配置的环境是openSUSE（大多数程序员好像用Ubuntu）\n\n作为电气工程的学生，我也不了解程序员界的行情.....这些事情也无从考究\n\n不过最近开始使用win10自带的虚拟机Hyper-v了，不过会和VM有兼容性问题。\n<!--more-->\n直接上操作：\n\t打开 “控制面板”—>“程序”\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200222215045728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n选择“启用或关闭windows功能”\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200222215429330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n选中Hyper-v的所有工具—就可以点击“确定”等待了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200222215807339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200222215905888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n这里让电脑立即重启\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200222215954888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n一般来说重启后就能找到hyper-v\n\n可是我的电脑重启时竟然显示无法正常安装\n\n我一开始觉得是VM的兼容性问题，我还傻乎乎的把VM卸载了（我之前用VM是为了运行R语言代码，后来就没怎么用过）\n\n结果还是不行\n\n后来在windows论坛上找到了解决方法\n\n\"win+X\"进入管理员PowerShell运行模式——>\n\n输入\n\n```c\n.\\bcdedit /set hypervisorlaunchtype auto\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200222223623274.png)\n显示操作成功完成即可\n\n最后结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020022222372689.png)\n有需要 openSUSE 资源的朋友可以找我，压缩资源我电脑里还是有的。\n\n\n","categories":["win10"],"tags":["win10"]},{"title":"MATLAB 的global函数（全局变量）—从python和MAT实例中详细解释","url":"/posts/43318/","content":"今天本来发布了用摄像头 gui 拍照的程序，然后有人私信我问其中的global函数的使用方法。\n\n我想了一下，就以摄像头拍照为例子去解释一下这个函数的用法吧。\n\n但是首先用python中的一个小例子来说明一下：\n<!--more-->\n```python\n>>>YOU = '老大'\n>>>def fun():\n\t\tYOU = '老二'\n\t\tprint（YOU）\n\n>>>fun()\n>>>print(YOU)\n```\n大家应该知道结果是\n\n```python\n老二\n老大\n```\n但如果使用global：\n\n```python\n I = '老大'\ndef fun():\n    global I\n    I='老二'    \n    print(I)\n    \nfun()\nprint(I)\n```\n在这里简单想下就是使用global定义之后，函数内的变量也就可以被改变了\n\n就像变量与参数之间的关系，但是使用global之后，参数就变成真实的变量了，可以在define的函数中改变之前定义的值，很有意思。\n\n结果可想而知：\n\n```python\n老二\n老二\n%%%%%谁**是老二啊？？？！！！要当就当老大啊！！！\n```\n所以代码应该改成这样：\n\n```python\n I = '你是老二吧，哈哈'\ndef fun():\n    global I\n    I='我才是老大，哈哈哈哈'    \n    print(I)\n    \nfun()\nprint(I)\n```\n```python\n我才是老大，哈哈哈哈\n我才是老大，哈哈哈哈\n```\n\nOK 现在返回的就是你心底最先说的话吧，，哈哈，不开玩笑了......\n\n\n\n下面看看在matlab实例项目中的应用吧：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200219193459740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n话不多说，直接上代码：\n\n```java\nfunction pushbutton1_Callback(hObject, eventdata, handles)\n% hObject    handle to pushbutton1 (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\t\tvid = videoinput('winvideo',1);%调用摄像头\n\t\taxes = (handles.axes1);%指定figure\n\t\tpreview(vid);%显示视频\n```\n\n```javascript\nfunction pushbutton2_Callback(hObject, eventdata, handles)\n% hObject    handle to pushbutton2 (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\t\tframe = getsnapshot(vid);%获取每一帧\n\t\tI = ycbcr2rgb(frame);%RGB图像\n\t\timwrite(I,'csdn.png');\n```\n如果我代码是这样的话，命令行一定会报错：未定义变量‘vid’\n\n```javascript\n未定义函数或变量 'vid'。\n```\n\n大家看到pushbutton_1中定义vid在pushbutton_2中调用不了\n\n理由很简单，vid是push_1中的局部变量\n\n所以解决这个问题最好就是在push_1和push_2中把vid定义为全局变量\n\n而实现这个操作的就是global函数。\n```java\nfunction pushbutton1_Callback(hObject, eventdata, handles)\n% hObject    handle to pushbutton1 (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\t\tglobal(vid)\n\t\tvid = videoinput('winvideo',1);%调用摄像头\n\t\taxes = (handles.axes1);%指定figure\n\t\tpreview(vid);%显示视频\n```\n\n```javascript\nfunction pushbutton2_Callback(hObject, eventdata, handles)\n% hObject    handle to pushbutton2 (see GCBO)\n% eventdata  reserved - to be defined in a future version of MATLAB\n% handles    structure with handles and user data (see GUIDATA)\n\t\tglobal(vid)\n\t\tframe = getsnapshot(vid);%获取每一帧\n\t\tI = ycbcr2rgb(frame);%RGB图像\n\t\timwrite(I,'csdn.png');\n```\n而加上全局变量后就可以正常运行。\n\n好了，这样的global函数就说完了。\n\n\n题外话：\n\n最近新型冠状病毒疫情有所好转，我老爸在家把盗墓笔记全部电影电视剧看完了\n\n现在拉着我们家人一起看斗罗大陆的动画片....(不过还真的挺好看的哈哈哈)\n\n不说了，赶快陪爸妈看斗罗大陆动画片了...\n\n希望疫情赶快结束吧！！！","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"使用MATLAB调用摄像头并拍照—详细代码","url":"/posts/50105/","content":"\n>大家也可以加我的交流群，所有资料我会在群里分享出来哦：977947271\n>2020/5/30：\n\n今天给大家介绍一下我第一次使用matlab进行摄像头拍照并进行图像处理的过程\n\n下面是个简单的GUI：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200219115644543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n虽然不使用GUI也可以实现这种功能，不过我建议初学者最好使用GUI来控制程序，之后有时间我会发布不使用GUI来实现这种功能的博文。\n\nGUI界面的建立这里就不多说了。\n\n这个GUI是由一个坐标轴和四个按钮组成，按钮分别是“打开摄像头”，“拍照并保存”，“关闭摄像头”，“图像处理”，对应代码中的pushbutton1/2/3/4。\n\n目的是先打开摄像头，再拍摄照片到电脑中，最后调用图片去进行处理。\n\n下面介绍代码：\n这里是 pushbutton1 的callback\n```python\nvarargout{1} = handles.output;\nglobal vid\n%定义一个全局变量，global的用法可以参照我的另一篇博文\nvid = videoinput('winvideo',1,'YUY2_640x480');\n%winvideo函数可参照另一篇文章中imaqhwinfo的用法\nset(vid,'FramesPerTrigger',1);\n%用特定的帧数去显示视频\nset(vid,'TriggerRepeat',Inf);\nvidRes = get(vid,'VideoResolution');\n%二维数组，获取视频长宽\nnBands = get(ojb,'NumberOfBands');\n%获得图像的颜色层数\naxes(handles.axes1);\n%让视频显示在指定的axes1坐标中\nglobal hImage\n%定义全局变量hImage\nhImage = image(zeros(vidRes(2),vidRes(1),nBands));\n%获得图像的句柄\npreview（vid,hImage）;\n```\n点开“打开摄像头后”在 axes1 中就可看到拍摄的画面\n\n接下来介绍图片的保存：\n\n```python\nglobal vid;\nframe = getsnapshot(vid);\n%摄像头每一帧的画面\nframe = ycbcr2rgb(frame);\n%将捕获的图像转化为RGB格式的图像\n[filename,pathname] = uiputfile({'*.bmp','BMP files':'*.jpg','JPG files'}'格式');\n%照片名称与储存路径\nif isequal(filename,0) || isequal(pathname,0)\n%文件名与路径是否被占用\n\treturn;\nelse \n\tfpath = fullfile(pathname,filename);\nend\nimwrite(frame,fpath);\n```\n其实这种操作的逻辑对于matlab 的GUI来说，都可以比较简便的解决\n\n关闭摄像头：\n\n```python\n%很简单，在callback中写入一个函数即可\nclose（findobj('gca','figure_csdn')）;\n%findobj('PropertyName','PropertyValue',...)\n返回figure的句柄\n```\n对于想要对图像进行处理的话：\n\n```python\n%就需要在callback中写入读取上图保存的图片的代码\nx = imread('name.jpg');\nimshow(x);\n%在进行相应的处理程序\n```\n因为 gui 的代码冗长且很多地方无用，就无法将代码全部贴出来，但是对于有些基础的是可以看懂的，所有代码都放在相应的cb中进行。\n\n之后会发出更复杂的定时拍照的程序 gui，希望有技术大佬可以帮助指点错误与不足。\n\n如果有需要这篇文章中源码和 gui 的可以私信我。\n\n欢迎大家指正不足。\n","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"新手如何使用anaconda（python）—简单介绍","url":"/posts/50452/","content":"我之前用 python 的 IDLE 去写代码，但是在深度学习的部分，代码频频报错，因为 python 的很多库都没有，而自己去下载的话速度极其的慢。\n\n所以下载 anaconda 了， anaconda 里已经下载了很多库（虽然依然没有我想要的库），但相比单单一个 python 软件便好用许多。\n\n这里介绍一下新手如何快速使用 anaconda（我也是刚接触 python，好在比C简单多了，和 matlab 又很像）：\n<!--more-->\n我们在：\n\n清华镜像下载   anaconda（下载过程看我另一篇博文）：\n[https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/](https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/)\n\n\n安装好了之后\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200217161343829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n开始界面应该有这些东西，不过我们需要的一般只有 Jupyter Notebook 和  Anaconda Prompt。\n\nJupyter Notebook 可以当作 python 来用，只是界面不同。 Anaconda Prompt 就是和windows 的 cmd 差不多。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200217162002355.png)\n\n在prompt里输入python，则就会显示python的版本，我这里是3.6.5。\n\n并进入python的编程环境：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200217163039966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n不过最好不要在这里写代码吧，因为...上图就是教训呀！（新手不懂。。。）\n\n回归正题：\n代码一般都在Jupyter Notebook里写\n这里打开Jupyter Notebook\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020021716330039.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200217163404727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n电脑会自动打开网页 jupyter , anaconda中的python就是个web程序。在这里就可以开始python之旅了。上图现实的打开文件路径，可以打开里面储存的文件。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200217164043772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n点击new按钮就可以创建新的text file 和folder.\n\n打开text:\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020021716452081.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)就可以编辑文字和代码。\n\n点击 python 3 就可以正常的进行代码的编写了，下面随手写了个新手代码，按住shift+Enter就可以运行代码了。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200217165201133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n\n我也是个新手，因为 MATLAB 项目的需要所以转战 python。\n\n接下来我会继续更新 MATLAB 项目的部分，也会开始python爬虫的编写。\n\n欢迎各位指正错误。\n\n","categories":["python","入门"],"tags":["python","anaconda"]},{"title":"Anaconda镜像下载地址","url":"/posts/37594/","content":"清华大学镜像：[https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/](https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200217154416803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n这里建议大家下载这里画圈的版本，是python3.6的Windows版本。\n\n我试了anaconda官网的下载，基本速度在10k左右；用清华镜像下载的话速度在6M上下，速度很快。\n\n安装的话就是正常安装，安装过程中全部选择默认就可以了，我也试过不用默认的安装方式，并未发现什么不同。所以不用担心。\n\n下次会发一篇关于新手如何了解anaconda的文章。\n","categories":["python","入门"],"tags":["python","anaconda"]},{"title":"如何使用MATLAB调用摄像头—代码详解","url":"/posts/60879/","content":">大家也可以加我的交流群，所有资料我会在群里分享出来哦：977947271\n>\n>2020/5/30：\n>\n最近在做关于图像识别的项目。\n\n接触了MATLAB的许多操作，在这里做下关于调用笔记本摄像头的笔记。\n<!--more-->\n首先需要了解imaqhwinfo函数，在命令行输入imaqhwinfo就可以看到自己笔记本相关适配器和MATLAB版本的信息.但并不能看到摄像头的信息。\n<!--more-->\n```python\n>>imaqhwinfo\nans =  \n   包含以下字段的struct:\n \n       InstalledAdaptors:  {'winvideo'}\n           MATLABVersion:  '9.4 ( R2018a ) '\n             ToolboxName: 'Image Acquisition Toolbox'\n          ToolboxVersion: '5.4 (R2018a)'`\n\n```\n想要了解摄像头的信息就需要在imaqhwinfo中添加相关函数\n\n```python\n>>imaqhwinfo('winvideo')\n```\n下面是适配器相关信息\n\n```python\nans = \n  包含以下字段的struct:\n  \n      AdaptorDllName: 'C:\\MATLAB\\mwwinvideoimaq.dll'\n   AdaptorDllVersion: '5.4 (R2018)'\n         AdaptorName: 'winvideo'\n           DeviceIDs: {[1]}\n          DeviceInfo: [1×1 struct]\n```\nimaqhwinfo()返回的是一个结构体，其中 DeviceID 和 DeviceInfo比较重要。DeviceID 储存着电脑上所有可用摄像头的ID，每个ID对应着电脑可用的一个摄像头；DeviceInfo 里面储存着摄像头的信息，就是我们平时所说的视频格式。\n\n下面以我的电脑为例：\n\n使用 DeviceInfo.DeviceID 可以看到摄像头的 ID 为 1\n```python\n>>I = imaqhwinfo('winvideo');\n>>I.DeviceInfo.DeviceID\n ans =\n \t1\n```\n使用 DeviceInfo.SupportedFormats 函数可得到我的摄像头支持的格式是\n{'YUY2_160x120'}    {'YUY2_320x240'}    {'YUY2_640x480'}这三种。\n\n```python\n>>I = imaqhwinfo('winvideo');\n>>I.DeviceInfo.SupportedFormats\nans =\n     1×3cell 数组\n     {'YUY2_160x120'}    {'YUY2_320x240'}    {'YUY2_640x480'}\n\n```\n调用摄像头注意这个函数 videoinput（adaptorname，deviceID，format）\n\n如果我使用ID为 ‘1’ 的摄像头，格式选择为{'YUY2_640x480'}，\n\n那么代码为\n\n```python\nvideoinput('winvideo',1,'YUY2_640x480')\n```\n下面上简单的代码：\n\n```python\nvid = videoinput('winvideo',1,'YUY2_640x480');   %选择摄像头和格式\npreview (vid);    \t\t\t%显示vid函数中摄像头拍摄的画面\nframe = getsnapshot(vid);   \t\t\t%获取每一帧的图片\nfigure;imshow(frame);   \t\t%在figure中显示出摄像头拍摄的画面\n\t%如果想保存图片可以使用下面的函数\n\t%但这种函数保存打开摄像头那一瞬间的图片\n\t%有时间我将介绍如何使用gui去实现随时拍照的代码，\nimwrite(frame,'A.png');\n```\n下面是微微复杂点的代码，一般在实战中会用到，单纯是想玩的话，上面的代码已经够了。\n\n```python\nobj = videoinput('winvideo',1,'YUY2_640×480')；\n%winvideo'由函数imaqhwinfo查出\nset(vid,'FramesPerTrigger',1);\n%FramesPerTrigger用特定的帧数去捕获选定的视频 \nset(vid, 'TriggerRepeat', Inf);\n%不断地触发TriggerRepeat，以上代码一般不需要改动\nset(vid,'ReturnedColorSpace','rgb');\n%设置返回的视频颜色，‘rgb’是正常颜色，需要返回其他色彩可以在做改动\nvidRes=get(obj,'VideoResolution');         \n%获得视频的长与宽，是二维数组\nnBands=get(obj,'NumberOfBands');           \n%获得图像的颜色层数\nhImage=image(zeros(vidRes(2),vidRes(1),nBands));\n%获得图像的句柄\npreview(obj,hImage);\n%以上是我对这些代码的理解，具体情况在这里就没法细说了\n```\n这里就把简单的介绍完了。\n\n建议有需要的朋友使用GUI去实现对视频、图片的播放、保存、并做相应处理的操作。\n\n有时间我会把我的项目再深入介绍一下如何对这些进行操作，如果有感兴趣的朋友也可以联系我。\n","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"MATLAB账户未关联到许可证—无法打开help文档—解决方法","url":"/posts/62961/","content":"今天在使用help命令时，需要参阅一些函数的help文档，却发现我的matlab无法关联到许可证\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211154400903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n对于一些朋友，只需要在命令行输入‘license’便可得到许可证编号。但我的matlab是破解版的，所以没有许可证。\n\n再参阅的国外论坛后，找到了解决方法。\n下面就教大家如何解决：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211154735579.png)\n点击‘预设项’—‘帮助’\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211155006810.png)\n\n选择‘安装在本地’—‘在小窗口中’\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200211155132806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n即可解决问题，方法简单，只供破解版用户参阅。\n有问题可联系我。","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"MATLAB自适应直方图均衡—adapthisteq","url":"/posts/29977/","content":"今天写调用摄像头处理图像函数，用到了adapthisteq函数，顺便对adapthisteq函数做了一些总结。\n\nadapthisteq：适应直方图均衡化对比度限制器。通过转换强度图像中的值来改变图像的对比度。\n\nhisteq：自适应直方图均衡。\n<!--more-->\n与histeq函数不同的是，adapthisteq处理的是图片的小块区域的数据，而不是整个图像对比度增强，使输出区域的直方图大约匹配指定的直方图。相邻的小块用双线性插值把它们混合在一起，以消除人工诱导的边界。对比，尤其是在同质区域，可以限制，以避免放大图像中可能存在的噪声。\n\nG = adapthisteq(I, param1, val1, param2, val2, ...)\n\n**'NumTiles'**：由正整数组成的二元向量[ m, n ]。[ m, n ]为指定小块区域的行列数，M 和 n 都必须至少为2。图像块的总数等于 m * n。 默认值为 [ 8,  8 ]。 \n\n**'ClipLimit'**  ：是从0到1的实数标量，用于限制对比度增强。数值越大，对比度越高。默认值为: 0.01。\n\n**'NBins'**：正整数标量。为构建直方图时使用的直方图设置容器数增强对比度的转换。更高的值结果导致有在更大的动态范围，代价是较慢的处理速度。 默认值: 256。\n\n **'Range'**：'original' 或 'full'. 控制输出图像数据的范围。 如果‘ Range’设置为‘ original’ ，则范围限制为[ min (i (：))  max (i (：))]。 否则，默认情况下，或者当‘ Range’设置为‘ full’时，将使用输出图像类的全部范围(e.g.    uint8  是 [0 255])。默认值：full。\n \n**'Distribution'**：'uniform', 'rayleigh', 'exponential'。通过指定分布类型，为图像块设置所需的直方图形状。 默认值：uniform。\n\n**'Alpha'**：是一个分布参数，当“ Dist”为“ rayleigh”或“ exponential”时可以使用这个参数。 默认值：0.4。\n\n下面是随手写的一份代码，可以直观的看到adapthisteq的使用方法和使用效果。\n\n```\nI = rgb2gray(imread('tupian.png'));\nfigure;\nimshow(I);\n\nI1 = adapthisteq(I);\nfigure;\nimshow(I1);\n\nI2 = adapthisteq(I,'NumTiles',[50 50]);\nfigure;\nimshow(I2);\n\nI3 = adapthisteq(I,'NumTiles',[50 50],'ClipLimit',0.5);\nfigure;\nimshow(I3);\n\nI4 = adapthisteq(I,'NumTiles',[50 50],'ClipLimit',...\n0.5,'NBins',400);\nfigure;\nimshow(I4);\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020020917231924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200209172340536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200209172424575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020020917250378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200209172520303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n这里注意第一行代码，\n\n```\nI = rgb2gray(imread('tupian.png'));\nI = imread('tupian.png');\n```\n\n很多人会忘记做灰度处理导致adapthisteq使用错误。\n\n写文章时间较紧，如有错误，还请指正。","categories":["MATLAB"],"tags":["MATLAB","语法笔记"]},{"title":"MATLAB安装USB Webcams工具箱出现‘error’","url":"/posts/29908/","content":"下载matlab的Support Package for USB Webcams\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200208215954945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n<!--more-->\n点击安装后出现错误，无法安装\n receive the error \"There was a problem downloading the Support Package\"\n 出现这种情况一般是因为电脑和工具箱的服务器连接错误，可能是防火墙阻止连接，可以暂时禁止防护软件再重新安装。\n 在这里说一下：有些情况重新试几次就行，但是如果一直不行就可能是proxy、firewall的原因。\n我经过一番折腾已经下载完成了：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200208224301292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n对于proxy问题，大家可以找下相关文章。          \n对于firewall\n如果正在运行firewall，需要绕过阻碍连接mathworks服务器。             \nmathworks安装程序需要联系以下端口和地址上的mathworks服务器：              \n登录：mathworks.com              \n服务.mathworks.com             \nTCP端口80和443\nFirewall需要绕过两个端口上两个地址的阻碍连接，\n这些服务器不使用静态IP地址，为动态IP地址。所以需要使用域名搜索。   \n\n\n如果有问题可以再联系我，也可以找相关文章，此篇文章会在以后遇到具体问题时再做详细更改。           \n\n","categories":["MATLAB"],"tags":["MATLAB"]},{"title":"WIN10 未安装任何音频驱动 扬声器有个小红叉（已解决）","url":"/posts/57891/","content":"\n经历了无数次的下载安装各种驱动，无数次重启，几乎试了全网所有的方法都是不行，最后使用了国外论坛的方法终于成功了\n\n![这是我电脑现在的情况，问题已经完全解决了，太激动了哈哈](https://img-blog.csdnimg.cn/20200205210158898.png)\n\n此方法必须要先重启电脑，重启后立刻进行此操作！！\n\n我当时右击扬声器图标，选择打开声音设置\n<!--more-->\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200205210716557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n在这个声音面板一直往下翻\n\n![](https://img-blog.csdnimg.cn/20200205211020704.png)\n\n打开：轻松访问音频设置\n\n![选择更改设备或应用音量，然后慢慢等着](https://img-blog.csdnimg.cn/20200205211107866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n选择更改设备或应用音量，等一会就行然后\n\n声音面板界面的输出设备就应该显示了输出设备为扬声器\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200205211722980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70)\n\n我的未安装任何音频输出设备就这样解决了。\n\n欢迎大家提问，如果能帮到的就会回复大家。\n\n","categories":["win10"],"tags":["win10"]}]