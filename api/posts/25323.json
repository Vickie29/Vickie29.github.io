{"title":"Python学习笔记_9：class 类定义的属性与方法——详解","slug":"Python学习笔记_9：class 类定义的属性与方法——详解","date":"2020-06-17","updated":"2020-07-08","comments":true,"path":"api/posts/25323.json","excerpt":"<p>对很多没有其他语言基础的初学者来说，可能学到 python 的类定义的时候会苦恼很久</p><p>但，无论我们遇到什么困难，也不要怕，微笑着面对他，消除恐惧的最好办法就是面对恐惧，坚持，才是胜利，加油，奥利给！！！</p><p></p>","cover":"https://img-blog.csdnimg.cn/20200308134728646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70","covers":["https://img-blog.csdnimg.cn/20200308134728646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70"],"content":"<p>对很多没有其他语言基础的初学者来说，可能学到 python 的类定义的时候会苦恼很久</p>\n<p>但，无论我们遇到什么困难，也不要怕，微笑着面对他，消除恐惧的最好办法就是面对恐惧，坚持，才是胜利，加油，奥利给！！！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308134728646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<a id=\"more\"></a>\n<p>今天就给大家浅谈一下 class 中遇到的小问题吧</p>\n<p><strong>1、首先类的对象是什么时候产生的？</strong></p>\n<p>当类被定义完成时，类定义就变成了类的对象，可以通过 “类名.属性” 或 “类名.方法名()”  引用或使用相关的属性或方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">I</span>:</span></span><br><span class=\"line\">    \t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text</span><span class=\"params\">(self,x)</span>:</span></span><br><span class=\"line\">        \tprint(<span class=\"string\">'%d'</span>%(x**<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O = I()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text</span><br><span class=\"line\">&lt;bound method I.text of &lt;__main__.I object at <span class=\"number\">0x0000018820ABCB38</span>&gt;&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text(<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"number\">9</span></span><br></pre></td></tr></table></figure>\n<p><strong>2、类的属性可以将类的方法覆盖</strong><br>当给 O.text 赋值时，O.text(obj) 就会报错，因为 O.text 将 O.text()  覆盖</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">I</span>:</span></span><br><span class=\"line\">    \t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text</span><span class=\"params\">(self,x)</span>:</span></span><br><span class=\"line\">        \tprint(<span class=\"string\">'%d'</span>%(x**<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O = I()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"number\">16</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text(<span class=\"number\">4</span>)</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"&lt;pyshell#11&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    O.text(<span class=\"number\">4</span>)</span><br><span class=\"line\">TypeError: <span class=\"string\">'int'</span> object <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> callable</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text</span><br><span class=\"line\"><span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p><strong>3、注意类属性和实例属性的区别</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">I</span>:</span></span><br><span class=\"line\">\t\tcount = <span class=\"number\">1</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text</span><span class=\"params\">(self)</span></span></span><br><span class=\"line\">\t\t\tself.a = 2</span><br><span class=\"line\">\t\t\tself.b = <span class=\"number\">3</span></span><br><span class=\"line\">\t\t\tself.c = <span class=\"number\">4</span></span><br><span class=\"line\">\t\t\tI.num = <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p>count 和num 就是类属性（静态变量），a,b,c则是实例属性</p>\n<p>4、Error——传参错误</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">I</span>:</span></span><br><span class=\"line\">    \t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">        \tprint(<span class=\"string\">'abc'</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O = I()   %默认将O的值传给I(),作为I() 的参数</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"&lt;pyshell#20&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    O.text()</span><br><span class=\"line\">TypeError: text() takes <span class=\"number\">0</span> positional arguments but <span class=\"number\">1</span> was given</span><br></pre></td></tr></table></figure>\n<p>因为python中的 “类.obj（）” 需要实例才可以使用，上述代码中python 就会默认将O的值传给 I() ，所以再调用 O.text() 时就是报错</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TypeError: text() takes <span class=\"number\">0</span> positional arguments but <span class=\"number\">1</span> was given</span><br><span class=\"line\">%需要<span class=\"number\">0</span>个参数，但是已经传入<span class=\"number\">1</span>个参数</span><br></pre></td></tr></table></figure>\n<p>所以应该在 def text() 加入实例对象</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">I</span>:</span></span><br><span class=\"line\">    \t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text</span><span class=\"params\">(obj)</span>:</span></span><br><span class=\"line\">        \tprint(<span class=\"string\">'abc'</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O = I()   </span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>O.text()</span><br><span class=\"line\">abc</span><br></pre></td></tr></table></figure>\n","url":"/posts/25323/","min2read":2,"word4post":543,"prev_post":{"title":"Python安装 chardet","url":"/posts/61970/"},"next_post":{"title":"Python 官方的中文文档","url":"/posts/43900/"},"toc":"","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"语法笔记","path":"api/categories/语法笔记.json","url":"/categories/python/语法笔记/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"语法笔记","path":"api/tags/语法笔记.json","url":"/tags/语法笔记/"}]}